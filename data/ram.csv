universal_label,nes_address,nes_size,snes_address,snes_size,gba_address,gba_size,category,description
Temp_Var1,$0000,1,$7E0000,1,,0,Misc.,Temporary storage variable (protected from damage by NMI)
Temp_Var2,$0001,1,$7E0001,1,,0,Misc.,Temporary storage variable (protected from damage by NMI)
Temp_Var3,$0002,1,$7E0002,1,,0,Misc.,Temporary storage variable (protected from damage by NMI)
Temp_Var4,$0003,1,$7E0003,1,,0,Misc.,Temporary storage variable
Temp_Var5,$0004,1,$7E0004,1,,0,Misc.,Temporary storage variable
Temp_Var6,$0005,1,$7E0005,1,,0,Misc.,Temporary storage variable
Temp_Var7,$0006,1,$7E0006,1,,0,Misc.,Temporary storage variable
Temp_Var8,$0007,1,$7E0007,1,,0,Misc.,Temporary storage variable
Temp_Var9,$0008,1,$7E0008,1,,0,Misc.,Temporary storage variable
Temp_Var10,$0009,1,$7E0009,1,,0,Misc.,Temporary storage variable
Temp_Var11,$000A,1,$7E000A,1,,0,Misc.,Temporary storage variable
Temp_Var12,$000B,1,$7E000B,1,,0,Misc.,Temporary storage variable
Temp_Var13,$000C,1,$7E000C,1,,0,Misc.,Temporary storage variable
Temp_Var14,$000D,1,$7E000D,1,,0,Misc.,Temporary storage variable
Temp_Var15,$000E,1,$7E000E,1,,0,Misc.,Temporary storage variable
Temp_Var16,$000F,1,$7E000F,1,,0,Misc.,Temporary storage variable
VBlank_Tick,$0010,1,,0,,0,Flag,"Can be used for timing, or knowing when an NMI just fired off"
,$0011,1,$7E0010,2,,0,Empty,Unused.
Horz_Scroll_Hi,$0012,1,$7E0012,1,,0,Camera,"Provides a ""High"" byte for horizontally scrolling, or could be phrased as ""current screen""
SNES note: RAM address $7E0211 is usually set in conjunction with this"
Vert_Scroll_Hi,$0013,1,$7E0013,1,,0,Camera,"Provides a ""High"" byte for vertically scrolling (only used during vertical levels!)
SNES note: RAM address $7E0217 is usually set in conjunction with this"
PPU_CTL1_Mod,$0013,0,,0,,0,Hardware Mirror,"NOT DURING GAMEPLAY, this is used as an additional modifier to PPU_CTL1"
Level_ExitToMap,$0014,1,$7E0014,1,,0,Level,"When non-zero, kicks back to map (OR to event when Player_FallToKing or Player_RescuePrincess is nonzero!)"
Counter_1,$0015,1,$7E0015,1,,0,Counter,"This value simply increments every frame, used for timing various things"
PPU_CTL2_Copy,$0016,1,$7E0016,1,,0,Hardware Mirror,"Essentially a copy of PPU_CTL2, which updates it as well, though the sprite/BG visibility setting is usually (always?) forced on
SNES: hardware mirror for INIDISP ($2100)"
Pad_Holding,$0017,1,$7E0017,1,,0,I/O,"Active player's inputs (i.e. 1P or 2P, whoever's playing) buttons being held in (continuous)"
Pad_Input,$0018,1,$7E0018,1,,0,I/O,"Active player's inputs (i.e. 1P or 2P, whoever's playing) buttons newly pressed only (one shot)"
Roulette_RowIdx,$0019,1,$7E0019,1,,0,Bonus Game,Roulette Bonus Game only obviously
Pal_Force_Set12,$001A,1,,0,,0,Palettes,"This overrides the normal palette routine of selecting by Level_Tileset and loading the color sets PalSel_Tile_Colors/PalSel_Obj_Colors.
Setting Pal_Force_Set12 to a non-zero value will select as the index instead of Level_Tileset, and then it will copy the first two sets of 16 colors from the palette data as bg / sprite colors."
PlantInfest_ACnt,$001B,1,,0,,0,Counter,Plant infestation level animation counter
VBlank_TickEn,$001C,1,,0,,0,Flag,Enables the VBlank_Tick decrement and typically other things like joypad reading
Map_Enter2PFlag,$001D,1,,0,,0,Flag,"If $00, entering level, otherwise set if entering 2P VS mode"
Map_EnterViaID,$001E,1,,0,,0,Overworld,Overrides whatever spot on the map you entered with something special (see Map_DoEnterViaID)
,$001F,1,,0,,0,Empty,Unused.
Map_IntBoxErase,$0020,1,,0,,0,Overworld,"Used for determining where in erasing the ""World X"" intro box we are"
Map_ClearLevelFXCnt,$0020,1,,0,,0,Counter,"Counter for ""clear level"" FX occurring (1-6: Poof, 7-9: Flip) (""poof""/""panel flip"")"
Map_EnterLevelFX,$0020,1,,0,,0,Video,"When entering a level on the map, dictates the status of the entry (0=None, 1=Boxing in, 2=Boxing out [J only])"
Map_ScrollOddEven,$0020,1,,0,,0,Camera,Toggles odd/even column as it scrolls
,$0021,1,,0,,0,Empty,Unused.
Level_Width,$0022,1,,0,,0,Level,"Width of current level, in screens (0 = don't move at all, max is 15H/16V)"
Scroll_VOffsetT,$0023,1,,0,,0,Camera,Current tile offset (every 16px) of top of screen (vertical level style ONLY)
Scroll_ColumnR,$0023,1,,0,,0,Camera,Current tile column (every 16px) of right side of screen (non-vertical level style ONLY)
Scroll_VOffsetB,$0024,1,,0,,0,Camera,Current tile offset (every 16px) of bottom of screen (vertical level style ONLY)
Scroll_ColumnL,$0024,1,,0,,0,Camera,Current tile column (every 16px) of left side of screen (non-vertical level style ONLY)
Scroll_ColorStrip,$0025,54,,0,,0,Graphics,"This stores a strip of just the upper 2 bits of a tile ($00, $40, $80, $C0) to produce attribute info"
Scroll_LastDir,$005B,1,,0,,0,Camera,"0=screen last moved right (or up, if vertical), 1=screen last moved left (or down, if vertical)"
Scroll_RightUpd,$005C,1,,0,,0,Camera,"Indicates every 8 pixels update going to the right, or $FF if screen moves left"
Scroll_VertUpd,$005C,1,,0,,0,Camera,"Indicates every 8 pixels update up or down, in vertical levels"
Scroll_LeftUpd,$005D,1,,0,,0,Camera,"Indicates every 8 pixels update going to the left, or $FF if screen moves right"
Graphics_Queue,$005E,1,,0,,0,Misc.,"Prepares to perform a Video_Update when possible, indexes the ""Video_Upd_Table"" in PRG030 OR Video_Upd_Table2 in PRG025 (whichever is currently in context)
Also resets the graphics buffer afterward, since the RAM buffer is constantly being called to possibly perform its own updates after this value resets to zero."
,$005F,2,,0,,0,Empty,Unused.
Level_LayPtr_AddrL,$0061,1,,0,,0,Level,Low byte of address to tile layout (ORIGINAL stored in Level_LayPtrOrig_AddrL)
Level_LayPtr_AddrH,$0062,1,,0,,0,Level,High byte of address to tile layout (ORIGINAL stored in Level_LayPtrOrig_AddrH)
Map_Tile_AddrL,$0063,1,,0,,0,Level,Low byte of tile address
BonusText_BaseL,$0063,1,,0,,0,Bonus Game,Instruction text base address low
Map_Tile_AddrH,$0064,1,,0,,0,Level,High byte of tile address
BonusText_BaseH,$0064,1,,0,,0,Bonus Game,Instruction text base address high
Level_ObjPtr_AddrL,$0065,1,,0,,0,Level,Low byte of address to object set (ORIGINAL stored in Level_ObjPtrOrig_AddrL)
Level_ObjPtr_AddrH,$0066,1,,0,,0,Level,High byte of address to object set (ORIGINAL stored in Level_ObjPtrOrig_AddrH)
,$0067,2,,0,,0,Empty,Unused.
Video_Upd_AddrL,$0069,1,,0,,0,Video,"Video_Misc_Updates routine uses this as an address, low byte"
Video_Upd_AddrH,$006A,1,,0,,0,Video,"Video_Misc_Updates routine uses this as an address, hi byte"
Music_Base_L,$006B,1,,0,,0,Audio,Current music segment base address low byte
Music_Base_H,$006C,1,,0,,0,Audio,Current music segment base address high byte
Sound_Sqr_FreqL,$006D,1,,0,,0,Audio,Calculated square wave frequency for Note On (low byte)
Sound_Sqr_FreqH,$006E,1,,0,,0,Audio,Calculated square wave frequency for Note On (high byte)
Sound_Map_EntrV,$006F,1,,0,,0,Audio,"Current index into the volume ramp-down table used exclusively for the ""level enter"" sound"
Sound_Map_EntV2,$0070,1,,0,,0,Audio,"Same as Sound_Map_EntrV, only for the second track"
Music_PatchAdrL,$0071,1,,0,,0,Audio,Music current patch address low byte
Music_PatchAdrH,$0072,1,,0,,0,Audio,Music current patch address high byte
Sound_Map_Off,$0073,1,,0,,0,Audio,"Current ""offset"" within a map sound effect"
,$0074,1,,0,,0,Empty,Unused.
Ending2_PicState,$0075,1,,0,,0,Title Screen/Ending,Ending part 2 picture loader state
Title_XPosHi,$0075,8,,0,,0,Title Screen/Ending,"""High"" part of the extended precision X position for all objects"
World_Map_Y,$0075,2,,0,,0,Overworld,(Mario/Luigi) Y pixel coordinate position of Mario on world map
Vs_State,$0075,1,,0,,0,Battle Mode,2P Vs Mode state
Player_XHi,$0075,1,,0,,0,Player,Player X Hi
Ending2_ClearLen,$0076,1,,0,,0,Title Screen/Ending,Length of clear run
Vs_IsPaused,$0076,1,,0,,0,Battle Mode,"If set, 2P Vs is paused"
Objects_XHi,$0076,8,,0,,0,Sprites,Other object's X Hi positions
Ending2_ClearPat,$0077,1,,0,,0,Title Screen/Ending,Pattern to clear the screen with
World_Map_XHi,$0077,2,,0,,0,Overworld,(Mario/Luigi) X pixel (hi byte) coordinate position of Mario on world map
Ending2_PicVRAMH,$0078,1,,0,,0,Title Screen/Ending,Ending part 2 picture VRAM Hi
Ending2_PicVRAML,$0079,1,,0,,0,Title Screen/Ending,Ending part 2 picture VRAM Lo
World_Map_X,$0079,2,,0,,0,Overworld,(Mario/Luigi) X pixel (lo byte) coordinate position of Mario on world map
Ending2_QCmdEnd,$007A,1,,0,,0,Title Screen/Ending,Ending2_QueueCmd is incremented to this point
Ending2_FadeTimer,$007B,1,,0,,0,Title Screen/Ending,Timer which controls the speed of the fade between worlds
World_Map_Move,$007B,2,,0,,0,Overworld,(Mario/Luigi) Movement left in specified direction (even numbers only!)
Ending2_QueueCmd,$007C,1,,0,,0,Title Screen/Ending,"Incremented after posting, up to Ending2_QCmdEnd"
Ending2_TimerH,$007D,1,,0,,0,Title Screen/Ending,"Ending part 2 timer ""high"" part"
Title_YPosHi,$007D,8,,0,,0,Title Screen/Ending,"""High"" part of the extended precision Y position for all objects"
World_Map_Dir,$007D,2,,0,,0,Overworld,"(Mario/Luigi) Specified travel direction (8=Up, 4=Down, 2=Left, 1=Right)"
Ending2_TimerL,$007E,1,,0,,0,Title Screen/Ending,"Ending part 2 timer ""low"" part"
Ending2_CurWorld,$007F,1,,0,,0,Title Screen/Ending,Current world we're showing (8 = THE END)
Objects_Var4,$007F,5,$7E004D,5,,0,Sprites,Generic variable 4 for objects SLOT 0 - 4 ONLY
CineKing_DialogState,$007F,1,,0,,0,Level,"Toad & King Cinematic: When 1, we're doing the text versus the dialog box itself"
Map_UnusedPlayerVal,$007F,2,,0,,0,Overworld,"(Mario/Luigi) Set for each Player to $20 when returning to map, but apparently unused otherwise!"
Map_UnusedPlayerVal2,$0084,2,,0,,0,Overworld,"(Mario/Luigi) Apparently unused at all, but backed up and persisted on the world map"
Level_GndLUT_Addr,$0084,2,,0,,0,Level,(TOFIX)
Pipe_PlayerX,$0084,1,,0,,0,Player,Stores Player's X when they went into pipe (non-transit)
Title_ObjX,$0085,0,,0,,0,Misc.,Title screen object X positions
Pipe_PlayerY,$0085,1,,0,,0,Player,"Stores Player's Y when they went into pipe (non-transit, aligned to nearest 16, minus 1)"
Map_WWOrHT_Y,$0086,1,,0,,0,Overworld,Warp Whistle wind or Hand Trap Y position
Player_YHi,$0087,1,,0,,0,Player,Player Y Hi
Map_HandTrap_XHi,$0087,1,,0,,0,Overworld,"Hand Trap X Hi (most vars are shared with warp wind, but technically not this one!)"
Map_WWOrHT_X,$0088,1,,0,,0,Overworld,Warp Whistle wind or Hand Trap X position
Objects_YHi,$0088,8,,0,,0,Sprites,Other object's Y Hi positions
Map_WWOrHT_Cnt,$0089,1,,0,,0,Overworld,Warp Whistle wind or Hand Trap counter
Map_WWOrHT_Dir,$008A,1,,0,,0,Overworld,"Direction the Warp Whistle wind travels (0 = right, 1 = left)"
Map_StarFX_State,$008B,1,,0,,0,Overworld,0 - 2 NOTE: Shared with Map_WarpWind_FX
BonusCoins_State,$008B,1,,0,,0,Bonus Game,(TOFIX)
Map_WarpWind_FX,$008B,1,,0,,0,Overworld,1 - 4 is the warp whistle effect
World_Map_Twirl,$008C,0,,0,,0,Misc.,"If set, Mario is ""twirling"""
Title_ObjY,$008D,8,,0,,0,Title Screen/Ending,Title screen object Y positions
Map_Skid_DeltaY,$008E,1,,0,,0,Overworld,Delta applied directly to Y
Map_Skid_DeltaFracY,$008F,1,,0,,0,Overworld,Fractional delta Y
Player_X,$0090,1,,0,,0,Player,Player X
Map_Skid_FracY,$0090,1,,0,,0,Overworld,Fractional Y accumulator
Objects_X,$0091,8,,0,,0,Sprites,Other object's X positions
Map_Skid_DeltaX,$0092,1,,0,,0,Overworld,Delta applied directly to X
Map_Skid_DeltaFracX,$0093,1,,0,,0,Overworld,Fractional delta X
Map_Skid_FracX,$0094,1,,0,,0,Overworld,Fractional X accumulator
Map_Skid_FracCarry,$0095,1,,0,,0,Overworld,Fractional carry over accumulator (I think?)
Title_ObjXVel,$0095,8,,0,,0,Title Screen/Ending,X velocities of title screen objects (4.4FP)
Map_Skid_Count,$0096,1,,0,,0,Overworld,Just a ticker controlling the display frame of the twirl
Map_Skid_Counter,$0097,1,,0,,0,Overworld,Just a ticker controlling the display frame of the twirl
Map_Skid_TravDirs,$0098,1,,0,,0,Overworld,"specifies which way Player must ""twirl"" to get to the destination
Bit 0 Set = Player must travel to the right versus the left
Bit 1 Set = Player must travel downward versus upward"
Objects_Var5,$009A,8,,0,,0,Sprites,Generic variable 5 for objects
CineKing_Var,$009A,1,,0,,0,Level,General variable
Map_StarsX,$009B,8,,0,,0,Overworld,"During World Intro, X position of each star"
Title_ObjYVel,$009D,8,,0,,0,Title Screen/Ending,Y velocities of title screen objects
Player_Y,$00A2,1,,0,,0,Player,Player Y
Objects_Y,$00A3,8,,0,,0,Sprites,Other object's Y positions
Map_StarsY,$00A3,8,,0,,0,Overworld,"During World Intro, Y position of each star"
Title_XPosFrac,$00A5,8,,0,,0,Title Screen/Ending,X position extended precision of objects (provides 4-bit fixed point)
Map_StarsOutRad,$00AB,1,,0,,0,Overworld,"During World Intro, stars take off radius (0 = smallest, increments for larger)"
Player_SpriteX,$00AB,1,,0,,0,Player,Player's sprite X
Objects_SpriteX,$00AC,8,,0,,0,Sprites,Other object's sprite X positions
Title_YPosFrac,$00AD,8,,0,,0,Title Screen/Ending,Y position extended precision of objects (provides 4-bit fixed point)
Map_StarsXSteps,$00AF,1,,0,,0,Overworld,"During World Intro, number of ""steps"" remaining in the X position adjustment"
Map_StarsRadCnt,$00B0,1,,0,,0,Overworld,"During World Intro, adds $70 per display frame and adds 1 to the radius when it overflows"
Map_StarsCenterX,$00B1,1,,0,,0,Overworld,"During World Intro, X center of stars"
Map_StarsCenterY,$00B2,1,,0,,0,Overworld,"During World Intro, Y center of stars"
Map_StarsDeltaR,$00B3,1,,0,,0,Overworld,"During World Intro, delta to the star radii"
Player_SpriteY,$00B4,1,,0,,0,Player,Player's sprite Y
Map_StarsConst9,$00B4,1,,0,,0,Overworld,"During World Intro, ... Constant 9?"
Objects_SpriteY,$00B5,8,,0,,0,Sprites,Other object's sprite Y positions
Title_ObjYVelChng,$00B5,2,,0,,0,Title Screen/Ending,Mario / Luigi change in Y velocity flag
Map_StarsAnimCnt,$00B6,1,,0,,0,Overworld,"During World Intro, a simple counter that adds 32 per frame and toggles Map_StarsFrame when it overflows"
Map_StarsFrame,$00B7,1,,0,,0,Overworld,"During World Intro, ""frame"" of stars (0/1)"
Title_ObjMLFlags,$00B7,2,,0,,0,Title Screen/Ending,Mario / Luigi Sprite flags
Map_StarsPattern,$00B8,1,,0,,0,Overworld,"During World Intro, stars current VROM pattern"
Map_StarsLandRad,$00B9,1,,0,,0,Overworld,"During World Intro, stars landing radius (0 = largest, increments for smaller)"
Title_ObjMLMoveDir,$00B9,1,,0,,0,Title Screen/Ending,"Mario / Luigi move direction
0 = No move, 1 = Left, 2 = Right"
Map_StarsYSteps,$00BA,1,,0,,0,Overworld,"During World Intro, number of ""steps"" remaining in the Y position adjustment"
Title_ObjMLAnimFrame,$00BB,2,,0,,0,Title Screen/Ending,Mario / Luigi animation frame
Map_StarsRadius,$00BC,8,,0,,0,Overworld,"During World Intro, each star's ""radius"" position (each radius position is 0-31)"
Title_ObjMLDirTicks,$00BD,2,,0,,0,Title Screen/Ending,Mario / Luigi animation ticks
Player_XVel,$00BD,1,,0,,0,Player,Player's X Velocity (negative values to the left) (max value is $38)
Objects_XVel,$00BE,8,,0,,0,Sprites,Other object's X velocities
Title_ObjMLSprite,$00BF,2,,0,,0,Title Screen/Ending,Mario / Luigi next sprite to display
Title_ObjMLPower,$00C1,2,,0,,0,Title Screen/Ending,"Mario / Luigi current powerup (0 = Small, 1 = Big, 2 = Leaf)"
Title_ObjMLSprRAMOff,$00C3,2,,0,,0,Title Screen/Ending,Mario / Luigi Defines a Sprite_RAM offset for Mario / Luigi
Map_StarsState,$00C4,1,,0,,0,Overworld,"0 = Stars coming out from center, 1 = Stars moving in towards Player start"
Title_ObjMLSprVis,$00C5,2,,0,,0,Title Screen/Ending,Mario / Luigi sprite sliver visibility bits (generated by Title_MLDetermineSpriteVis)
Map_SkidBack,$00C5,1,,0,,0,Overworld,Player is skidding back (Map_Player_SkidBack stores whether they skidded on their last turn at all)
Objects_VarBSS,$00C6,7,,0,,0,Sprites,OBJECT SLOTS 0 - 5 ONLY ... uncleared var??
Title_ObjMLTailTick,$00C7,2,,0,,0,Title Screen/Ending,Mario / Luigi tail wagging tick
Map_UnusedGOFlag,$00C7,1,,0,,0,Overworld,"Set at map initialization or if Player gets Game Over and selects CONTINUE/END, no apparent purpose"
BonusDie_Y,$00C7,1,,0,,0,Bonus Game,UNUSED Bonus Game Die (1-6) Y position
BonusDie_X,$00C8,1,,0,,0,Bonus Game,UNUSED Bonus Game Die (1-6) X position
BonusDie_YVel,$00C9,1,,0,,0,Bonus Game,UNUSED Bonus Game Die Y Velocity (when it departs)
Title_ObjMLHold,$00C9,2,,0,,0,Title Screen/Ending,Mario / Luigi holding something flag (when non-zero)
BonusDie_YVelFrac,$00CA,1,,0,,0,Bonus Game,UNUSED Bonus Game Die Y Velocity fractional accumulator
Title_ObjMLBonkTick,$00CB,2,,0,,0,Title Screen/Ending,"Mario / Luigi use ""bonked"" frame while > 0"
Map_Intro_CurStripe,$00CC,1,,0,,0,Overworld,"Current stripe of the ""World X"" intro box to be erased (0 - 7)"
Map_Intro_NTOff,$00CD,1,,0,,0,Overworld,"Offset into nametable for erasing the ""World X"" intro box"
SlotIndexBackup,$00CD,1,,0,,0,Level,"Used as a backup for the slot index (e.g. current object, current score, etc.)"
Title_ObjMLKickTick,$00CD,2,,0,,0,Title Screen/Ending,Mario / Luigi use kicking frame while > 0
Player_HaltGame,$00CE,1,,0,,0,Level,"Player is halting game (e.g. dying, shrinking/growing, etc.)"
Map_Intro_ATOff,$00CE,1,,0,,0,Overworld,"Offset into the attribute table for erasing the ""World X"" intro box"
Map_Airship_DC,$00CF,1,,0,,0,Overworld,Set to 1 when the Airship knows where it's going
Player_YVel,$00CF,1,,0,,0,Player,Player's Y Velocity (negative values upward)
Title_ObjMPowerDown,$00CF,1,,0,,0,Title Screen/Ending,Mario power down animation counter
Title_ObjMLStop,$00D0,1,,0,,0,Title Screen/Ending,"Flag used briefly to ""hold"" Mario/Luigi from moving so they get a ""running start"""
Objects_YVel,$00D0,8,,0,,0,Sprites,Other object's Y velocities
Map_Airship_DY,$00D0,1,,0,,0,Overworld,Airship delta between current and target Y coordinate
Map_Airship_YNib,$00D1,1,,0,,0,Overworld,Map_Airship_DY shifts out its lower 4 bits as upper 4 bits to this value
Title_CurMLIndex,$00D1,1,,0,,0,Title Screen/Ending,"0 for Mario, 1 for Luigi"
Ending_Timer,$00D2,2,,0,,0,Title Screen/Ending,"Twin ending timers, generally one for Mario and one for Princess"
Title_ObjFlags,$00D2,6,,0,,0,Title Screen/Ending,Minor objects' sprite flags
Map_Airship_YAcc,$00D2,1,,0,,0,Overworld,Additional Y accumulator when traveling
Map_Airship_DXHi,$00D3,1,,0,,0,Overworld,Airship delta between current and target X Hi coordinate
Map_Airship_DX,$00D4,1,,0,,0,Overworld,Airship delta between current and target X coordinate
EndText_Timer,$00D4,1,,0,,0,Title Screen/Ending,Timer used for the ending text display
Ending_State,$00D5,1,,0,,0,Title Screen/Ending,"Current state value for initial part of ending (the princess, prior to curtain)"
Map_Airship_XNib,$00D5,1,,0,,0,Overworld,Map_Airship_DXHi/Map_Airship_DX shifts out its lower 4 bits as upper 4 bits to this value
EndText_VL,$00D6,1,,0,,0,Title Screen/Ending,Princess speech VRAM Address Low
Map_Airship_Dir,$00D6,1,,0,,0,Overworld,"Airship horizontal travel direction in bit 0, vertical direction in bit 1"
Map_HideObj,$00D7,1,,0,,0,Overworld,used for completion) (TOFIX)
EndText_VH,$00D7,1,,0,,0,Title Screen/Ending,Princess speech VRAM Address High
EndText_CPos,$00D8,1,,0,,0,Title Screen/Ending,Princess speech Character Position
Player_InAir,$00D8,1,,0,,0,Player,"When set, Player is in the air"
Title_ObjStates,$00D8,6,,0,,0,Title Screen/Ending,Title screen array of states for the individual objects (NOT including Mario/Luigi)
MapPoof_Y,$00D8,1,,0,,0,Overworld,"When using a power-up, ""poof"" appears at this Y coordinate"
EndText_State,$00D9,1,,0,,0,Title Screen/Ending,Princess speech state variable
CineKing_Frame2,$00D9,1,,0,,0,Level,"Used only by the World 6 King (Seal juggling a crown, the crown's frame)"
MapPoof_X,$00D9,1,,0,,0,Overworld,"When using a power-up, ""poof"" appears at this X coordinate"
Objects_DetStat,$00D9,8,,0,,0,Sprites,"Object's detection bits:
 $01-hit wall right
 $02-hit wall left
 $04-hit ground
 $08-hit ceiling
n $80-object touching ""32 pixel partition"" floor (if active)"
Map_UseItem,$00DA,1,,0,,0,Overworld,Flag to signal that item is to be used
Title_State,$00DE,1,,0,,0,Title Screen/Ending,"00 = Prior to red curtain rise, 01 = Rising curtain..."
Title_ResetCnt,$00DF,1,,0,,0,Title Screen/Ending,"Title reset counter -- when on the menu, once this hits zero, the title sequence restarts"
Title_ResetCnt2,$00E0,1,,0,,0,Title Screen/Ending,"When this goes to zero, it decrements Title_ResetCnt"
Title_ResetTrig,$00E1,1,,0,,0,Title Screen/Ending,"When non-zero, resets title screen"
Player_SprWorkL,$00E1,1,,0,,0,Level,Sprite work address low
Title_UnusedFlag,$00E2,1,,0,,0,Title Screen/Ending,"Doesn't seem to do anything useful but not do the ""skip"" state if Player presses START early on the title screen"
Player_SprWorkH,$00E2,1,,0,,0,Level,Sprite work address high
Title_Ticker,$00E3,1,,0,,0,Title Screen/Ending,"Tick counter for title screen intro ""movie"""
Title_MActScriptPos,$00E4,1,,0,,0,Title Screen/Ending,Offset within Mario's action script
Level_TileOff,$00E4,1,,0,,0,Level,Tile mem offset
Level_Tile,$00E5,1,,0,,0,Level,Temporary holding point for a detected tile index
Title_LActScriptPos,$00E5,1,,0,,0,Title Screen/Ending,Offset within Luigi's action script
World_Map_Tile,$00E5,1,,0,,0,Overworld,Current tile index Mario is standing on
Player_Slopes,$00E6,3,,0,,0,Level,"for sloped levels only (3 bytes allocated, but only one actually used)
NOTE: Code at PRG030_9EDB clears Player_Slopes+1 and Player_Slopes+2, but these are never used!"
Title_MActScriptDelay,$00E6,1,,0,,0,Title Screen/Ending,Mario's action script delay until next event
Title_LActScriptDelay,$00E7,1,,0,,0,Title Screen/Ending,Luigi's action script delay until next event
Title_MActScriptDirSet,$00E8,1,,0,,0,Title Screen/Ending,"Mario's action script Buffer for last queue command (sets respective ""Title_ObjMLDir"" variable)"
Scroll_Temp,$00E9,1,,0,,0,Overworld,Scroll hold value
Title_LActScriptDirSet,$00E9,1,,0,,0,Title Screen/Ending,"Luigi's action script Buffer for last queue command (sets respective ""Title_ObjMLDir"" variable)"
Title_ObjMLDir,$00EA,2,,0,,0,Title Screen/Ending,"Mario / Luigi vector direction bitfield (1 = Left, 2 = Right, 4 = Down, 8 = Up, $10 = Sprite behind BG, $80 = Tail wagging)"
Player_XStart,$00EB,1,,0,,0,Player,Set to Player's original starting X position (also used to check if level has initialized)
Player_WalkFrame,$00EC,1,,0,,0,Overworld,"Relative, not the same as Player_Frame"
Title_ObjMLQueue,$00EC,2,,0,,0,Title Screen/Ending,"Mario / Luigi queue to do something ($04 = Luigi's rebound off Mario, $10 = Kick shell, $20 = Begin carrying, $40 = Clear carry/bonk, do kick)"
Player_Suit,$00ED,1,,0,,0,Player,"Player's active powerup (see also: Player_QueueSuit)
Small = 0
Big = 1
Fire Flower = 2
Raccoon Suit = 3
Frog Suit = 4
Tanooki Suit = 5
Hammer Suit = 6"
Player_Frame,$00EE,1,,0,,0,Player,Player display frame
Title_EventIndex,$00EE,1,,0,,0,Title Screen/Ending,Title background event index (dynamic jump index for events on the title
Title_EventGrafX,$00EF,1,,0,,0,Title Screen/Ending,Title background current graphic index to load (loads items from Video_Upd_Table2 in PRG025)
Player_FlipBits,$00EF,1,,0,,0,Player,"Set to $00 for Player to face left, Set to $40 for Player to face right"
Title_ObjInitIdx,$00F0,1,,0,,0,Title Screen/Ending,"Current title screen ""event"" ID during the intro scene with Mario and Luigi"
Player_WagCount,$00F0,1,,0,,0,Player,"After wagging raccoon tail, until this hits zero, holding 'A' keeps your fall rate low"
Title_ObjInitDly,$00F1,1,,0,,0,Title Screen/Ending,Timer count before next object init
Player_IsDying,$00F1,1,,0,,0,Player,"0 = Not dying, 1 = Dying, 2 = Dropped off screen, 3 = Death due to TIME UP"
Title_3GlowFlag,$00F2,1,,0,,0,Title Screen/Ending,"When non-zero, begins the ""glowing"" effect for the big '3'"
Title_3GlowIndex,$00F3,1,,0,,0,Title Screen/Ending,Index into an array of colors to cause the big '3' on the title screen to glow
Obj01_Flag,$00F3,1,,0,,0,Sprites,Not sure what Obj01 is!! This blocks its left/right handler logic.
Scroll_OddEven,$00F4,1,,0,,0,Camera,"0 or 1, depending on what part of 8 pixels has crossed (need better description) (TOFIX)"
Ending2_IntCmd,$00F4,1,,0,,0,Title Screen/Ending,"Used during ending to buffer out the ending picture data on the interrupt.
Triggers ""Do_Ending2_IntCmd"" in PRG024 in interrupt context."
Controller1Press,$00F5,1,,0,,0,I/O,"Player 1's controller ""pressed this frame only"" (see Controller1 for values)"
Controller2Press,$00F6,1,,0,,0,I/O,"Player 2's controller ""pressed this frame only"" (see Controller2 for values)"
Controller1,$00F7,1,,0,,0,I/O,"Player 1's controller inputs
NES -- R01 L02 D04 U08 S10 E20 B40 A80"
Controller2,$00F8,1,,0,,0,I/O,"Player 2's controller inputs
NES -- R01 L02 D04 U08 S10 E20 B40 A80"
,$00F9,3,,0,,0,Empty,Unused.
Vert_Scroll,$00FC,1,$7E0216,2,,0,Camera,"Vertical scroll of name table; typically at $EF (239, basically showing the bottom half)"
Horz_Scroll,$00FD,1,$7E0210,2,,0,Camera,Horizontal scroll of name table
,$00FE,1,,0,,0,Empty,Unused.
PPU_CTL1_Copy,$00FF,1,,0,,0,Hardware Mirror,Holds PPU_CTL1 register data
Update_Select,$0100,1,,0,,0,Video,"Changes which path of ""update routines"" are selected
$00 = ??, $20 = Title Screen, $40 = Spade Game, $80 = Vertical level, $A0 = 32 pixel partition, $C0 = Normal"
Raster_Effect,$0101,1,,0,,0,Video,"$00 is standard status bar, $20 is title/ending, $40 = 32 pixel partition, $60 = Spade Bonus Game (3 sliding rows), $80 is nothing (e.g. as in 2P versus), $A0 = ???"
,$0102,254,,0,,0,Misc.,Stack.
Debug_Flag,$0160,1,,0,,0,Misc.,"Set to $80 by the debug menu, enables debug functionality like power level cycling and not dying from time over.
NES - Merges with previous stack area."
Sprite_RAM,$0200,256,,0,,0,Sprites,"This is where sprite memory is stored locally prior to being DMA'ed.

Sprite memory is laid out in four bytes:
Byte 0 - Stores the y-coordinate of the top left of the sprite minus 1.
Byte 1 - Index number of the sprite in the pattern tables.
Byte 2 - Stores the attributes of the sprite.
* Bits 0-1 - Most significant two bits of the colour.
* Bit 5 - Indicates whether this sprite has priority over the background.
* Bit 6 - Indicates whether to flip the sprite horizontally.
* Bit 7 - Indicates whether to flip the sprite vertically.
Byte 3 - X coordinate"
Graphics_BufCnt,$0300,1,,0,,0,Graphics,first byte holds current position within buffer (Graphics_Buffer+) to store info
Graphics_Buffer,$0301,107,,0,,0,Graphics,"Simple (and small!) delayed write buffer; uses same format as Video_Upd_Table in PRG030, get format info there"
TileChng_VRAM_H,$036C,1,,0,,0,Graphics,High part of VRAM address to change
TileChng_VRAM_L,$036D,1,,0,,0,Graphics,Low part of VRAM address to change
TileChng_Pats,$036E,4,,0,,0,Graphics,The four patterns required to change a tile (for Level_ChgTileEvent)
Level_SizeOrig,$0372,1,,0,,0,Level,Holds original size (width or height) of level (in screens)
Level_PipeExitDir,$0373,1,,0,,0,Player,"Direction Player is going to exit from a pipe (1 = Up, 2 = Down, 3 = Right, 4 = Left, 5 = In-level Transit)"
Level_7VertCopy,$0374,1,,0,,0,Level,"Just seems to be an unmaintained copy of Level_7Vertical from level load, but that's it"
Level_PipeNotExit,$0375,1,,0,,0,Level,"If set, pipes do NOT exit to map (i.e. as in pipe junctions)"
Level_PauseFlag,$0376,1,,0,,0,Level,"Set to 0 when not paused, or 1 when paused"
Level_SkipStatusBarUpd,$0377,1,,0,,0,Graphics,"When set, skips updating the status bar for one frame (priority graphics buffer changes I think)"
Raster_State,$0378,1,,0,,0,Graphics,"This variable's meaning depends on the Raster_Effect in use; typically 0 is first pass, then more for further scanlines"
,$0379,7,,0,,0,Empty,Unused.
Scroll_ToVRAMHi,$0380,1,,0,,0,Camera,"High byte for when pushing a column of tile data to VRAM (Set to $20, Name Table 0, after scroll update)"
Scroll_LastCol8,$0381,1,,0,,0,Camera,Last 8x8 block column that was updated (non-vertical level ONLY)
Scroll_LastOff8,$0381,1,,0,,0,Camera,Last 8x8 block offset that was updated (vertical level style ONLY)
Scroll_PatStrip,$0382,54,,0,,0,Camera,"(may be less?) This stores a strip of 8x8 blocks, (non-vertical level: top to bottom with 2 columns), to render the next 16 pixel ""sliver"" of screen space"
Scroll_ToVRAMHA,$03B8,1,,0,,0,Graphics,"High byte for when pushing attribute data to VRAM (Set to $23, attribute table 0)"
Scroll_LastAttr,$03B9,1,,0,,0,Misc.,(TOFIX)
Scroll_AttrStrip,$03BA,14,,0,,0,Graphics,(may be less?) This stores a 2x2 block of attribute coloring data
World_Num_Debug,$03C8,1,,0,,0,Misc.,"When debug mode is activated (KKKZSPIU), this is the world you select to start on"
Map_StarsDeltaX,$03C9,1,,0,,0,Overworld,"Delta the stars move in X to reach the Player (always positive, code figures direction)"
Map_StarsDeltaY,$03CA,1,,0,,0,Overworld,"Delta the stars move in Y to reach the Player (always positive, code figures direction)"
,$03CB,16,,0,,0,Empty,Unused.
Map_Stars_PRelX,$03DB,1,,0,,0,Overworld,"During world intro, screen relative position of Player X"
Map_Stars_PRelY,$03DC,1,,0,,0,Overworld,"During world intro, screen relative position of Player Y"
Player_Power,$03DD,1,,0,,0,Player,>>>>>>[P] charge level ($7F max)
Level_JctCtl,$03DE,1,,0,,0,Level,"Level_JctCtl is configured when you enter a door or a pipn* When $80, use current values for Level_AltLayout and Level_AltObjects
* When otherwise non-zero (inc $80), skips setting vertical start position

Normal values for the junction:
 0 - Disables junction (i.e. no junction occurring)
 1 - Junction initialization
 2 - Big Question Block bonus area
 3 - General purpose junction (as specified by Level_AltLayout and Level_AltObjects)
 4 - Generic level exit (where you come up from a pipe in the generic exit area)
 5 - Special Toad House (used for the 1-3 warp whistle)"
Level_JctFlag,$03DF,1,,0,,0,Flag,Toggles when you junction
,$03E0,1,,0,,0,Empty,Unused.
Map_DrawPanState,$03E1,1,,0,,0,Overworld,Map draw/pan state
ObjGroupRel_Idx,$03E2,1,,0,,0,Sprites,Holds relative index of object within its group (see PRG000_CA51)
InvFlip_VAddrHi,$03E3,1,,0,,0,Level,Hi byte of VRAM address during inventory flip modifications
,$03E4,1,,0,,0,Empty,Unused.
InvFlip_Frame,$03E5,1,,0,,0,Misc.,"Sort of a ""frame"" of animation during flipping of the inventory box; 0-7 during closing, 8-15 during opening"
InvFlip_Counter,$03E6,1,,0,,0,Counter,"0 = Closed, 4 = Fully Open"
InvStart_Item,$03E7,1,,0,,0,Misc.,"Starting inventory item; typ. $00, $07, $0E, $15 (Rows 1-4)"
InvHilite_X,$03E8,1,,0,,0,Misc.,Current hilite position X coordinate
InvHilite_Item,$03E9,1,,0,,0,Misc.,"Which item in the current row is highlighted, 0-6"
THouse_ID,$03EA,1,,0,,0,Level,An unused ID value that would track boxes already opened in a Toad House (concept unused!)
THouse_Treasure,$03EB,1,,0,,0,Level,"Treasure type you'll get at this Toad House
0 = INVALID
1 = Warp Whistle
2 = P-Wing
3 = Frog
4 = Tanooki
5 = Hammer
6 = Random Super Suit
7 = Random Basic Item"
Coins_Earned,$03EC,1,,0,,0,Level,"A ""buffer"" of coins earned to be added to your total, actual coinage stored in Inventory_Coins[2]"
Map_Powerup_Poof,$03ED,1,,0,,0,Counter,"Counter that handles the ""poof"" effect when a powerup is used on the map (requires Inventory to be open, and forces it to close afterward)"
Level_FreeVertScroll,$03EE,1,,0,,0,Level,"0 = Screen locked at $EF (lowest point) unless flying or climbing a vine
1 = Free vertical scroll
2 = Locked at arbitrary point (i.e. whatever Vert_Scroll is, it stays there)"
Level_7Vertical,$03EF,1,,0,,0,Level,Set in World 7 vertical type levels
Level_SelXStart,$03F0,1,,0,,0,Level,Selects X starting position when level begins (valid values 0-3)
Update_Request,$03F1,1,,0,,0,Video,"This changes the current Raster_Effect and Update_Select and doesn't persist
1 = 32 pixel partition; common use is for levels with water along the bottom
2 = Spade game sliders
3 = ""Water line"" mode (described at ObjHorzAutoScroller_Init)
$80 = If NOT set, hides sprites that fall beneath the partition (i.e. for fixed water effect)"
Map_Starman,$03F2,1,,0,,0,Overworld,Player used a Starman!
Map_Power_Disp,$03F3,1,,0,,0,Overworld,"This is the powerup currently DISPLAYED on the map; it should be the same as $0746 World_Map_Power, except for Judgem's Cloud"
Map_Warp_PrevWorld,$03F4,1,,0,,0,Overworld,The world you're coming FROM when warping (also used as output from warp zone what world you're going to)
,$03F5,11,,0,,0,Empty,Unused.
Roulette_Pos,$0400,3,,0,,0,Bonus Game,Horizontal position of each row
Roulette_PosHi,$0403,3,,0,,0,Bonus Game,Hi part of Roulette_Pos
Roulette_ShapeLock,$0406,3,,0,,0,Bonus Game,"Locked position of each row (0 = Mushroom, 1 = Flower, 2 = Mushroom, 3 = Star)"
Roulette_ConfigRun,$0409,1,,0,,0,Bonus Game,"0 = Configuring, 1 = Running"
Roulette_ConfigState,$040A,1,,0,,0,Bonus Game,Early configuration state
Roulette_RunState,$040B,1,,0,,0,Bonus Game,Running state of game
Roulette_xUpY,$040C,1,,0,,0,Bonus Game,"""x Up"" display Y position (overlaps first byte of Roulette_StopState)"
Roulette_StopState,$040C,3,,0,,0,Bonus Game,"Current ""state"" of each row while it is coming to a stop (1+)"
Roulette_LivesToGive,$040D,1,,0,,0,Bonus Game,Lives left to give in reward (overlaps second byte of Roulette_StopState)
Roulette_Speed,$040F,3,,0,,0,Bonus Game,Movement speed of each row (4.4FP)
Roulette_StopCnt,$0412,3,,0,,0,Counter,Decrements to zero while each row is stopping
Roulette_PosFrac,$0415,3,,0,,0,Bonus Game,Fractional accumulator for position of row 1-3
,$0418,1,,0,,0,Empty,Unused.
Roulette_Turns,$0419,1,,0,,0,Bonus Game,"UNUSED ""Turns Remaining"" (if > 0, and you lose Roulette, hit a button and spin again!)"
,$041A,1,,0,,0,Empty,Unused.
Fade_State,$041B,1,,0,,0,Level,"0 = Nothing, 1 = Fade in, 3 = Fade out"
Fade_Tick,$041C,1,,0,,0,Counter,Ticks down and then decrements Fade_Level
Fade_Level,$041D,1,,0,,0,Level,"4 to 0, fade in level"
FadeOut_Cancel,$041E,1,,0,,0,Level,"If set, the next attempted fade out will be cancelled, which then resets this to zero"
Player_AllowAirJump,$041F,1,,0,,0,Counter,"Counts down to zero, but while set, you can jump in the air"
Player_XVelAdj,$0420,1,,0,,0,Player,Applies additional value to the X Velocity
CineKing_Frame,$0421,1,,0,,0,Level,King's animation frame (NOTE: Shared with Objects_Var7 first byte)
Objects_Var7,$0421,8,,0,,0,Sprites,General object variable 7
Bonus_PrizeX,$0426,1,,0,,0,Bonus Game,UNUSED Prize sprite X
Card_SelectX,$0426,1,,0,,0,Bonus Game,Card cursor X (NOTE: Shared with Bonus_PrizeX)
Bonus_PrizeY,$0427,1,,0,,0,Bonus Game,UNUSED Prize sprite Y
Card_SelectY,$0427,1,,0,,0,Bonus Game,Card cursor Y (NOTE: Shared with Bonus_PrizeY)
Bonus_CurBufOffset,$0428,1,,0,,0,Bonus Game,Offset in graphics buffer while generating instruction box
Card_Index,$0428,1,,0,,0,Bonus Game,"Currently selected card in ""N-Spade"" Card game (NOTE: Shared with Bonus_CurBufOffset)"
Card_FirstIndex,$0429,1,,0,,0,Bonus Game,Card_Index of the first card you flipped (in case you get it wrong on the second...)
Card_SelectXOrig,$042A,1,,0,,0,Bonus Game,Card cursor original X
Bonus_Round2,$042A,1,,0,,0,Bonus Game,"UNUSED Picks which ""Round 2"" game would be played (NOTE: Shared with Card_SelectXOrig)"
Card_MoveDelay,$042B,1,,0,,0,Bonus Game,"Decrements to zero; if not zero, can't move on N-Spade game"
Card_SprRAMOff,$042C,1,,0,,0,Bonus Game,Sprite RAM offset after cursor is drawn; for drawing card flip
Card_AnimTick,$042D,1,,0,,0,Counter,"Animation tick, decrements to zero"
Card_VRAM_L,$042E,1,,0,,0,Bonus Game,Low part of VRAM address of N-Spade card to modify
Card_VRAM_H,$042F,1,,0,,0,Bonus Game,High part of VRAM address of N-Spade card to modify
Card_FlipCount,$0430,1,,0,,0,Bonus Game,+1 for every card flip
Card_MatchCard,$0431,1,,0,,0,Bonus Game,"Card to match, i.e. the first card you selected of the pair"
Card_UnusedVL,$0432,1,,0,,0,Bonus Game,?? Some VRAM Low; Seems to only be part of an unused routine
Card_UnusedVH,$0433,1,,0,,0,Bonus Game,?? Some VRAM High; Seems to only be part of an unused routine
Bonus_GameHost,$0434,1,,0,,0,Bonus Game,"0 = Toad Host: The only one we ever got
All others are UNUSED...
1 = Koopa Troopa Host + ""Prize"" Game
2 = Koopa Troopa Host, no ""Prize"" Game
3 = Hammer Bro
NOTE: Shared with Card_GameState"
Card_GameState,$0434,1,,0,,0,Bonus Game,State of N-Spade card game
Card_TurnsRemain,$0435,1,,0,,0,Bonus Game,Number of turns remaining
Card_FlipFrame,$0436,1,,0,,0,Bonus Game,Frame of flipping card
Card_UnusedArray,$0437,4,,0,,0,Bonus Game,?? (TOFIX)
Card_UnusedAttr,$043B,1,,0,,0,Bonus Game,Seems to only be part of an unused routine; attribute table offset of some sort
Card_UnusedArrIdx,$043C,1,,0,,0,Bonus Game,Seems to only be part of an unused routine; index for Card_UnusedArrIdx
Card_Matches,$043D,1,,0,,0,Bonus Game,"Matches (local, this round; Seems to only be used as part of the unused routine)"
Card_CoinsToGive,$043E,1,,0,,0,Bonus Game,"If greater than zero, coins are being given"
,$043F,1,,0,,0,Empty,Unused.
Bonus_GameState,$0440,1,,0,,0,Bonus Game,"0 = ?
1 = Giving instructions die game
2 = Rotating ""die""
3 = Coin spurt prize
4 = Stopped die
5 = Die flies away
6 = ?? Initialize instructions?
7 = Giving instructions
8 = Pause before proceeding
9 = Exiting"
Card_InitState,$0441,1,,0,,0,Bonus Game,Initialization state of N-Spade card game
Bonus_GameType,$0442,1,,0,,0,Bonus Game,"This appears to determine what game you're about to play. This also reveals some of the greatest questionable loss in SMB3...
When this value is anything besides 1 or 2, it plays what I SUPPOSE was a ""roulette"" game? With a fixed graphics patch, it appears to be a die cycling 1-6.

0 = Japanese text, translated as:
 If ""1"" appears, 1 (?)
 If ""2"" appears, I'll give you a key
 Otherwise, I'll give you coins.
1 = Standard Spade game (UNUSED BONUS GAMES NOTE: May have once been the ""odd"" game spoken of in type 5)
2 = N-Spade (UNUSED BONUS GAMES NOTE: May have once been the ""even"" game spoken of in type 5)
3: I suspect this is a placeholder ('C' being the 3rd)
4: I suspect this is a placeholder ('D' being the 4th)
5 = Japanese: ""If an odd number appears, I'll let you play the Roulette Game.""
6 = Japanese: ""If an even number appears, I'll let you play the Card Game.""
7 = Japanese: ""2, return (?)"""
Bonus_KTPrize,$0443,1,,0,,0,Bonus Game,"UNUSED Koopa Troopa's ""Prize"" Game Prize ID (0 = Mushroom, 1 = Star, 2 = Flower, 3 = Judgem's, by BMF54123's patch)"
Map_EntTran_VLHalf,$0444,1,,0,,0,Overworld,"When 1, offset starts vertically ""lower half"" (at $F0 of first screen)"
Map_EntTran_TBCnt,$0445,1,,0,,0,Counter,Decreasing counter as the transition moves inward top/bottom
Map_EntTran_LRCnt,$0446,1,,0,,0,Counter,Decreasing counter as the transition moves inward left/right
Map_W8D_VAddrH,$0447,1,,0,,0,Overworld,World 8 Darkness - (TOFIX)
Map_EntTran_BVAddrH,$0447,4,,0,,0,Overworld,Each border's current high part of VRAM address
Map_W8D_VAddrL,$044B,1,,0,,0,Overworld,World 8 Darkness - (TOFIX)
Map_EntTran_BVAddrL,$044B,4,,0,,0,Overworld,Each border's current low part of VRAM address
Map_EntTran_BorderLoop,$044F,1,,0,,0,Counter,Border loop counter
Map_EntTran_Cnt,$0450,1,,0,,0,Counter,(TOFIX)
Map_EntTran_VAddrH,$0451,1,,0,,0,Overworld,High part of VRAM address to modify
Map_W8D_VAddrH2,$0451,1,,0,,0,Overworld,World 8 Darkness - (TOFIX)
Map_EntTran_VAddrHAdj,$0452,1,,0,,0,Overworld,"An adjusted version of the high address as needed to wrap (used in removed ""box out"" version only)"
Map_EntTran_VAddrL,$0453,1,,0,,0,Overworld,Low part of VRAM address to modify
Map_W8D_VAddrL2,$0453,1,,0,,0,Overworld,World 8 Darkness - (TOFIX)
Map_EntTran_TileOff,$0454,1,,0,,0,Level,"Offset into tile memory (used in removed ""box out"" version only)"
Map_EntTran_Tile8x8,$0455,1,,0,,0,Level,"Offset to which 8x8 pattern of the tile we're grabbing that we need (used in removed ""box out"" version only)"
Map_W8D_TileOff,$0455,1,,0,,0,Overworld,"World 8 Darkness - In-tile offset (0 = upper left, 1 = lower left, 2 = upper right, 3 = lower right)"
Map_EntTran_VRAMGap,$0456,1,,0,,0,Level,"Sets gap (i.e. 1 for vertical, 32 for horizontal; used in removed ""box out"" version only)"
,$0457,1,,0,,0,Empty,Unused.
Map_W8D_YOff,$0458,1,,0,,0,Overworld,Y Offset from Player when doing darkness
Map_W8D_XOff,$0459,1,,0,,0,Overworld,X Offset from Player when doing darkness
Map_W8D_RC,$045A,1,,0,,0,Overworld,"Row in the upper bits, column in the lower bits"
Map_W8D_Dir,$045B,1,,0,,0,Overworld,"Direction of travel in darkness (1 = Right, 2 = Left, 4 = Down, 8 = Up)"
Map_W8D_X,$045C,1,,0,,0,Overworld,World 8 Darkness - (TOFIX)
Map_W8D_Y,$045D,1,,0,,0,Overworld,World 8 Darkness - (TOFIX)
Map_W8D_Idx,$045E,1,,0,,0,Overworld,World 8 Darkness - (TOFIX)
Map_EntTran_Temp,$045F,1,,0,,0,Overworld,Seems to me a multi-purpose value in entrance transition
Map_EntTran_InitValIdx,$0460,1,,0,,0,Overworld,Selects an index of values to initialize by (TOFIX)
Level_MusicQueue,$0461,1,,0,,0,Audio,Requests a song from Set 2A/B (used to allow delayed start)
Level_MusicQueueRestore,$0462,1,,0,,0,Audio,"What to ""restore"" the BGM to when it changes (e.g. Starman, P-Switch, etc.)"
,$0463,109,,0,,0,Empty,Unused.
Music_TriTrkPos,$04D0,1,,0,,0,Audio,Offset of triangle track in currently playing index
Music_NseTrkPos,$04D1,1,,0,,0,Audio,Offset of noise track in currently playing index
Music_PCMTrkPos,$04D2,1,,0,,0,Audio,Offset of DMC track in currently playing index
Music_Sq2RestH,$04D3,1,,0,,0,Audio,Square 2 Track hold for rest values to be applied after each event
Music_Sq2Rest,$04D4,1,,0,,0,Audio,"Square 2 Track ""Rest"" period (counts down to zero)"
Music_Sq2NoteLen,$04D5,1,,0,,0,Audio,"Square 2 Track length of note (counts down to zero, cuts off sound)"
Music_Sq1Rest,$04D6,1,,0,,0,Audio,"Square 1 Track ""Rest"" period (counts down to zero)"
Music_Sq1NoteLen,$04D7,1,,0,,0,Audio,"Square 1 Track length of note (counts down to zero, cuts off sound)"
Music_TriRestH,$04D8,1,,0,,0,Audio,Triangle Track hold for rest values to be applied after each event
Music_TriRest,$04D9,1,,0,,0,Audio,"Triangle Track ""Rest"" period (counts down to zero)"
Music_NoiseRest,$04DA,1,,0,,0,Audio,"Noise Track ""Rest"" period (counts down to zero)"
Music_NseRestH,$04DB,1,,0,,0,Audio,Noise Track hold for rest values to be applied after each event
Music_DMCRest,$04DC,1,,0,,0,Audio,"DMC Track ""Rest"" period (counts down to zero)"
Music_DMCRestH,$04DD,1,,0,,0,Audio,DMC Track hold for rest values to be applied after each event
Music_PCMStart,$04DE,1,,0,,0,Audio,Holds the starting offset of the DMC track
Music_NextIndex,$04DF,1,,0,,0,Audio,"Next ""index"" to be played"
SFX_Counter1,$04E0,1,,0,,0,Counter,Generic purpose SFX counter
SndCur_Player,$04E1,1,,0,,0,Audio,Currently playing Player sound (blocks music on Square 1)
SndCur_Level1,$04E2,1,,0,,0,Audio,"Currently playing ""level 1"" sound (blocks music on Square 2)"
SndCur_Level2,$04E3,1,,0,,0,Audio,"Currently playing ""level 2"" sound"
SndCur_Music1,$04E4,1,,0,,0,Audio,Currently playing BGM from Music 1 set
SndCur_Music2,$04E5,1,,0,,0,Audio,Currently playing BGM from Music 2 set
SndCur_Map,$04E6,1,,0,,0,Audio,Currently playing map sound (blocks music on Square 1)
SndCur_Pause,$04E7,1,,0,,0,Audio,"Holds copy of Sound_QPause, to play sound while everything else is paused"
SFX_Counter2,$04E8,1,,0,,0,Counter,Generic purpose SFX counter for level sounds
SFX_Counter3,$04E9,1,,0,,0,Counter,Generic purpose SFX counter
SFX_Counter4,$04EA,1,,0,,0,Counter,Generic purpose SFX counter
,$04EB,2,,0,,0,Empty,Unused.
Sound_IsPaused,$04ED,1,,0,,0,Audio,"When set, sound processing is PAUSED"
,$04EE,3,,0,,0,Empty,Unused.
Sound_QPlayer,$04F1,1,,0,,0,Audio,Queue Player sound effects (TOFIX)
Sound_QLevel1,$04F2,1,,0,,0,Audio,Queue Level sound effects 1 (TOFIX)
Sound_QLevel2,$04F3,1,,0,,0,Audio,Queue Level sound effects 2 (TOFIX)
Sound_QMusic1,$04F4,1,,0,,0,Audio,Queue music request 1 (TOFIX)
Sound_QMusic2,$04F5,1,,0,,0,Audio,Queue music request 2 (TOFIX)
Sound_QMap,$04F6,1,,0,,0,Audio,Queue map sound effects (TOFIX)
Sound_QPause,$04F7,1,,0,,0,Audio,"Queue pause sound
Pause sound effect (like pressing START, pauses music!)
Resume sound (resumes music)"
DMC_Time,$04F8,1,,0,,0,Audio,Time remaining on DMC sound
Music_Sq1RestH,$04F9,1,,0,,0,Audio,Square 1 Track hold for rest values to be applied after each event
Music_Sq1AltRamp,$04FA,1,,0,,0,Audio,"When Square 1 track encounters a $00 byte, it actives a ramping mode, the value of which is stored here"
Music_LOST4FB,$04FB,1,,0,,0,Audio,"AFAIK, value in music engine that is ""lost""; nothing seems to set it, and it doesn't do very much (possibly was a note length override??)"
Music_LOST4FC,$04FC,1,,0,,0,Audio,"AFAIK, value in music engine that is ""lost""; nothing seems to set it, and it doesn't do very much"
Music_RestH_Base,$04FD,1,,0,,0,Audio,Base offset into Music_RestH_LUT
Music_Sq2TrkOff,$04FE,1,,0,,0,Audio,Offset of square wave 2 track in currently playing index
Music_Sq1TrkOff,$04FF,1,,0,,0,Audio,Offset of square wave 1 track in currently playing index
Map_Object_ActY,$0500,15,,0,,0,Overworld,"For map objects, their actual display Y coordinate (as it may modify, esp. with marchers)"
Map_Object_ActX,$050F,15,,0,,0,Overworld,"For map objects, their actual display X coordinate (as it may modify, esp. with marchers)"
Event_Countdown,$0510,1,,0,,0,Counter,"Event_Countdown is context dependent; without context, does nothing
* When you come out of a pipe, this counter decrements until the pipe should be finished
* When you die, counts down until dropping back to map"
Title_MLAccelCnt,$0510,1,,0,,0,Counter,"Constant moving counter which overflows to provide a more ""natural"" acceleration to the Bros"
Player_TailCount,$0511,1,,0,,0,Player,Determines display frame of tail wag
Title_MarioPoof,$0511,1,,0,,0,Counter,"Countdown of Mario's ""poof"" when he collects the power up"
Title_MLHoldTick,$0512,1,,0,,0,Title Screen/Ending,"Set to $40 when Mario/Luigi are ""held"" (count down to zero)"
Player_InAir_OLD,$0512,1,,0,,0,Player,Stores backup of Player_InAir
Player_FireCount,$0513,1,,0,,0,Player,"Player shoots fireball/hammer, sets sprite frame (shared with Player_FrogHopCnt)"
Title_ObjVar,$0513,6,,0,,0,Title Screen/Ending,Minor objects user-defined variable 1 (automatically decrements if not zero!)
Player_FrogHopCnt,$0513,1,,0,,0,Counter,Counter used for frog hopping along the ground (shared with Player_FireCount)
Player_PMeterCnt,$0515,1,,0,,0,Counter,Tick counter used to count when to increase/decrease Power Meter
B10Coin_Timer,$0516,1,,0,,0,Counter,"Decrements until zero, which is how much time you have to get the max coins from a 10 coin block"
Player_TailAttack,$0517,1,,0,,0,Counter,"Initiailized to $12; counts down to zero, performs tail attack!"
CineKing_Timer,$0518,1,,0,,0,Counter,Timer; decrements to zero (shares Objects_Timer first byte)
Objects_Timer,$0518,8,,0,,0,Sprites,"""Timer"" values; automatically decrements to zero"
Title_ObjVar2,$0519,6,,0,,0,Title Screen/Ending,Minor objects user-defined variable 2
Map_Object_ActXH,$051E,15,,0,,0,Overworld,"For map objects, their actual display X Hi byte (as it may modify, esp. with marchers)"
Title_ObjFrame,$051F,1,,0,,0,Title Screen/Ending,"Minor object ""frame""; adds 2x the value here to the pattern selection for the object's sprites"
Objects_Timer2,$0520,8,,0,,0,Sprites,"""Timer"" values; automatically decrements to zero "
Level_BlockChgXHi,$0528,1,,0,,0,Player,Player X High value when block change was queued
Level_BlockChgXLo,$0529,1,,0,,0,Player,Player X Low value when block change was queued
Level_BlockChgYHi,$052A,1,,0,,0,Player,Player Y High value when block change was queued
Level_BlockChgYLo,$052B,1,,0,,0,Player,Player Y Low value when block change was queued
Level_BlkBump_Pos,$052C,2,,0,,0,Sprites,"Block bump effect slot ""position"" (from 10 down, ""position"" of bounce)"
Map_Object_Data,$052D,15,,0,,0,Overworld,"For marching objects, 0/1 for their direction, could be anything though"
Level_BlkBump,$052E,3,,0,,0,Sprites,"Block bump effect slot (use Level_ChgTileEvent value, or 0 for inactive)"
Level_BlkBump_XHi,$0531,3,,0,,0,Sprites,Block bump slot X Hi
Level_BlkBump_XLo,$0534,3,,0,,0,Sprites,Block bump slot X Lo
Level_BlkBump_YHi,$0537,3,,0,,0,Sprites,Block bump slot Y Hi
Level_BlkBump_YLo,$053A,3,,0,,0,Sprites,Block bump slot Y Lo
Map_March_Count,$053C,15,,0,,0,Overworld,"Simply counts and overflows, but used to determine position of marching map objects (PER ID, not object index ... Actually is seems they go back and forth on that??)"
Level_VertScrollH,$0542,1,,0,,0,Camera,"Alternate VertScroll_Hi used by engine, adjusted before being sent to Vert_Scroll_Hi"
Level_VertScroll,$0543,1,,0,,0,Camera,"Alternate VertScroll used by engine, adjusted before being sent to Vert_Scroll"
Player_AboveTop,$0544,1,,0,,0,Flag,"If Player is above top of level, this is $FF (-1), otherwise it is zero"
Level_InitAction,$0545,1,,0,,0,Level,AT LEVEL INITIALIZATION ONLY: Performs a specific initialization routine (NOTE: Shared with Player_Slide)
Player_Slide,$0545,1,,0,,0,Player,"Positive values sliding forward, negative values sliding backward; directly sets Player_XVel"
Player_UphillFlag,$0546,1,,0,,0,Flag,"When set, Player is walking uphill, and uses speed index value at Player_UphillSpeedIdx"
,$054B,4,,0,,0,Empty,Unused.
Player_Flip,$054F,1,,0,,0,Flag,"Invincibility Somersault is used when set; only works in air, reset on ground"
Level_AirshipH,$0550,1,,0,,0,Level,Height of the airship during the Airship Intro (shared with Player_KuriboDir)
Player_KuriboDir,$0550,1,,0,,0,Player,"While Kuribo's shoe is moving: 0 - Not requesting move, 1 - move right, 2 - move left"
Player_Grow,$0551,1,,0,,0,Player,"Tick counter used to animate growth into Super Mario (20 is starting value, or 2f to shrink)"
Player_FlashInv,$0552,1,,0,,0,Player,"Player ""flashing invincibility"" after being hit, counts down to zero"
Player_StarInv,$0553,1,,0,,0,Counter,"Starman Invincibility counter; full/fatal invincibility, counts down to zero"
Player_SuitLost,$0554,1,,0,,0,Counter,"Suit lost to hit discard ""poof"" counter"
Player_StarOff,$0555,1,,0,,0,Counter,"Starman Invincibility wear-off (the last second or so when it slows and vanishes), counts down to zero"
Player_HaltTick,$0556,1,,0,,0,Counter,"When non-zero, all action halts until this countdown hits zero"
Player_Kick,$0557,1,,0,,0,Counter,"Kick frame in use, counts down to zero"
Player_PipeFace,$0558,1,,0,,0,Counter,"Player forward frame, used for vertical pipe entrance, counts down to zero"
Player_EndLevel,$0559,1,,0,,0,Counter,Player's end of level run-off until count down to zero (player will actually wrap around horizontally if too large)
Level_AirshipCtl,$055A,1,,0,,0,Level,"Airship control -- 1 = run and jump to catch air ship, 2 = climb to enter, 3 = enter"
,$055B,1,,0,,0,Empty,Unused.
Counter_Wiggly,$055C,1,,0,,0,Counter,"""Wiggly"" counter, provides rippled movement (like the airship rising during its intro)"
Counter_7to0,$055D,1,,0,,0,Counter,Counter that runs from 7 to 0 continuously while level is in progress
,$055E,1,,0,,0,Empty,Unused.
LevelPartialInit,$055F,1,,0,,0,Level,"When set, performs a partial reinitialization of level data (notably does not perform the Level InitAction unless it is airship related)"
Level_TilesetIdx,$0560,1,,0,,0,Level,"Holds Level_Tileset as an ""index"" value instead, relative to levels (i.e. Level_Tileset - 1)"
Level_ChangeReset,$0561,1,,0,,0,Level,"When set to zero, a mass reset is performed (used when changing ""scenes"" in a single level)"
Level_UnusedFlag,$0562,1,,0,,0,Level,"Unused; only set in a couple places, but never read back!"
Level_SlopeEn,$0563,1,,0,,0,Flag,"If set, enables slope tiles (otherwise they're considered flat top-only solids)"
Level_ChgTileEvent,$0564,1,,0,,0,Level,"When non-zero, queues a ""change tile"" event (TOFIX)"
Level_NoStopCnt,$0565,1,,0,,0,Counter,"A counter which continuously increments unless something is ""stopping"" the action"
Level_Event,$0566,1,,0,,0,Level,"Check ""LevelEvent_Do"" for values; 0 means nothing (TOFIX)"
Level_PSwitchCnt,$0567,1,,0,,0,Counter,"When non-zero, P-Switch is active (init @ $80); counts down to zero and restarts music"
,$0568,1,,0,,0,Empty,Unused.
Player_SlideRate,$0569,1,,0,,0,Player,"While Player is sliding, this is added to X Velocity (does not persist, however)"
,$056A,1,,0,,0,Empty,Unused.
Player_IsClimbing,$056B,1,,0,,0,Flag,Set when Player is climing vine
Player_FlipBits_OLD,$056C,1,,0,,0,Player,Holds backup of Player_FlipBits
Player_HitCeiling,$056D,1,,0,,0,Flag,Flag set when Player has just hit head off ceiling
Player_FlyTime,$056E,1,,0,,0,Counter,"When > 0, Player can fly (for power ups that do so); decrements (unless $FF) to 0"
Player_IsDucking,$056F,1,,0,,0,Flag,Set when Player is ducking down
Player_WhiteBlkCnt,$0570,1,,0,,0,Counter,White block counter; counts up while Player is standing on white block and holding down
Level_PipeMove,$0571,1,,0,,0,Level,"Level_PipeMove is set to various values that dictate how Player is moving within a pipe

The lower 2 bits form a direction as follows:
 00 - right
 01 - left
 10 - down
 11 - up

If bit 7 ($80) is NOT set, then we're just entering the pipe, and next 3 bits say what it will do:
000xx - Does nothing (not used, invalid)
001xx - Exits level (i.e. World Map pipe junctions)
010xx - Junction to appropriate ""Big Question Block"" bonus area (Level_JctCtl = 2)
011xx - Junction general (Level_JctCtl = 3)
100xx - Junction to generic exit area (Level_JctCtl = 4)
101xx - In-level transit (a la World 7 pipe mazes and other places; does not set Level_JctCtl)

If bit 7 IS set, we're moving through the pipe (either exiting out one end or in-transit)"
Level_CoinHeav,$0572,1,,0,,0,Level,"Enter coin heaven when set $80; Increments; at $D0, ""soft jump"" arrival; terminates at wrap to $00"
Player_MoveLR,$0573,1,,0,,0,Player,"0 - Not moving left/right, 1 - Moving left, 2 - Moving right (reversed from the pad input)"
Player_WalkAnimTicks,$0574,1,,0,,0,Player,Ticks between animation frames of walking; max value varies by Player's X velocity
Player_InWater,$0575,1,,0,,0,Flag,"Set for when in water (1 = Regular water specifically, other non-zero values indicate waterfall)"
Player_SwimCnt,$0576,1,,0,,0,Counter,Swim counter FIXME Describe better 0-3 (TOFIX)
Player_Kuribo,$0577,1,,0,,0,Flag,Set for Kuribo's Shoe active
Player_QueueSuit,$0578,1,,0,,0,Player,"Queues a suit change (values like Player_Suit, but add 1, EXCEPT: $0F = Statue enable, $40 = Splash, $80 = Kuribo's Shoe)"
Player_mGoomba,$0579,1,,0,,0,Flag,Player is caught by a micro Goomba (jump short)
Player_Statue,$057A,1,,0,,0,Counter,Player is in Tanooki Statue mode; counts down to zero
Player_RunFlag,$057B,1,,0,,0,Flag,"Set while Player is actually considered ""running"" (holding down B and at enough speed; doesn't persist)"
Player_Bounce,$057C,1,,0,,0,Sprites,Set to cause block bounce (upper 4 bits specifies what kind of block will be bounced)
Player_BounceDir,$057D,1,,0,,0,Player,"Direction of Player bounce -- 0 = Down, 1 = Up, 2 = Left, 3 = Right"
Player_BounceObj,$057E,1,,0,,0,Sprites,Set if it was a kicked shelled object that hit the bounce block (i.e. don't bounce the Player if the object is the one that hit) 
Counter_ByPlayerSpd,$057F,1,,0,,0,Counter,A counter which increments faster as the Player goes faster
Level_HAutoScroll,$0580,1,,0,,0,Flag,"When set to 1, ""auto horizontal scroll"" is active (this can be toggled mid-level)"
B10Coin_Count,$0581,1,,0,,0,Counter,"Decrements until -1, you continue to get a coin until it does so"
B10Coin_ID,$0582,1,,0,,0,Level,Forms a sort of unique ID so game knows if you've switched blocks
Player_OffScreen,$0583,1,,0,,0,Flag,Set when Player is completely off screen
FloatLevel_PlayerWaterStat,$0584,1,,0,,0,Player,"For levels that ""float"" and have a fixed set of water at the bottom
Bit 6: Set if Player is beneath bottom of water
Bit 7: Set if beneath top of water"
Player_LowClearance,$0585,1,,0,,0,Flag,"Set when Player is in a ""low clearance"" situation (big Mario in a single block high tunnel)"
PUp_StarManFlash,$0586,1,,0,,0,Flag,Set when a Starman is bouncing about so it cycles colors! (also used to get super suit if set in advance)
Map_Objects_Vis,$0587,15,,0,,0,Overworld,"Set for map objects as visible, clear if it's not"
Player_Behind_En,$0587,1,,0,,0,Flag,"Specifies whether the ""Behind the scenes"" effect is actually active
If the Player has stepped out from behind the background, it can be still active, but he won't get the effect of it!"
Player_Behind,$0588,1,,0,,0,Flag,"When non-zero, Player is ""behind the scenes"" (as by white block)"
Player_Slippery,$0589,1,,0,,0,Player,"0 = Ground is not slippery, 1 = Ground is a little slippery, 2 = Ground is REALLY slippery"
Player_SandSink,$058A,1,,0,,0,Flag,"Sinking in quicksand! (holds Y when quicksand hit in upper 4 bits, bit 0 sets '0' jumping, '1' sinking)"
Player_PartDetEn,$058B,1,,0,,0,Player,"""32 Pixel Partition Detection"" enabler
When set, if Player Y >= 160, Player detects bottom two rows of tiles implicitly
Used with Update_Request = UPDATERASTER_32PIXPART if there's a floor (i.e. NOT used in levels with fixed water; for that, see FloatLevel_PlayerWaterStat)"
Player_InPipe,$058C,1,,0,,0,Flag,Player is going through pipe
Player_MushFall,$058D,1,,0,,0,Flag,"Set to 0 when mushroom is to fall to the left, 1 to the right"
Player_SprOff,$058E,1,,0,,0,Player,"Player sprite offset (NOTE: Should be multiples of 4, otherwise bad unaligned stuff happens!)"
Object_SprRAM,$058F,8,,0,,0,Sprites,Sprite_RAM offset by object
Map_MarchInit,$0596,1,,0,,0,Overworld,Set when marching data has been initialized (done once per marching cycle on the map)
Map_InCanoe_Flag,$0597,0,,0,,0,Misc.,"Set when Player is in Canoe (modifies movement, allows movement in water, etc.)"
SpecialObj_Var2,$0597,8,,0,,0,Sprites,General purpose variable 2
World_8_Dark,$0598,1,,0,,0,Overworld,"Darkness on World 8 Map, level 2 -- counts 0-7 while setting up the effect"
World_Map_AnimF,$0599,1,,0,,0,Overworld,"World map animation frame (for bushes, etc.)"
World_Map_AnimT,$059A,1,,0,,0,Overworld,World map animation tick
,$059F,2,,0,,0,Empty,Unused.
SpecialObj_YVelFrac,$05A1,8,,0,,0,Sprites,Y velocity fractional accumulator
,$05A9,2,,0,,0,Empty,Unused.
SpecialObj_XVelFrac,$05AB,8,,0,,0,Sprites,X velocity fractional accumulator
,$05B3,2,,0,,0,Empty,Unused.
SpecialObj_Var3,$05B5,8,,0,,0,Sprites,General purpose variable 3
,$05BD,2,,0,,0,Empty,Unused.
SpecialObj_YLo,$05BF,8,,0,,0,Sprites,Y low coordinate of special object
,$05C7,2,,0,,0,Empty,Unused.
SpecialObj_XLo,$05C9,8,,0,,0,Sprites,X low coordinate of special object
,$05D1,2,,0,,0,Empty,Unused.
SpecialObj_YVel,$05D3,8,,0,,0,Sprites,Y Velocity of special object
,$05DB,2,,0,,0,Empty,Unused.
SpecialObj_XVel,$05DD,8,,0,,0,Sprites,X Velocity of special object
,$05E5,2,,0,,0,Empty,Unused.
BonusText_VH,$05E7,1,,0,,0,Bonus Game,(TOFIX)
BonusText_VL,$05E8,1,,0,,0,Bonus Game,(TOFIX)
,$05E9,4,,0,,0,Empty,Unused.
Misc_Counter,$05ED,1,,0,,0,Counter,Miscellaneous loop counter ?
Level_TimerMSD,$05EE,1,,0,,0,Level,Leftmost / most significant digit on timer
Level_TimerMid,$05EF,1,,0,,0,Level,Middle digit on timer
Level_TimerLSD,$05F0,1,,0,,0,Level,Rightmost / least significant digit on timer
Level_TimerTick,$05F1,1,,0,,0,Counter,Timer decrementing tick
Inventory_Open,$05F2,1,,0,,0,Flag,"Set when inventory panel is open, also used to dictate whether it is ""opening"" (1) or ""closing"" (0)"
Level_TimerEn,$05F3,1,,0,,0,Flag,"Set to disable clock (bit 7 will also disable level animations, e.g. '?s')"
Kill_Tally,$05F4,1,,0,,0,Player,Counter that increases with each successful hit of an object without touching the ground
Objects_KillTally,$05F5,5,,0,,0,Sprites,OBJECT SLOTS 0 - 4 ONLY: Kill_Tally for a kicked shell as it hits other enemies 
PlayerProj_YHi,$05FA,2,,0,,0,Sprites,Player projectile Y Hi
Level_AScrlConfig,$05FC,1,,0,,0,Camera,"$01 = Enables auto scroll coordinate adjustments of any sort
$80 = Disables horizontal auto scroll coordinate adjustment (generally if Horz Auto Scroll is not in use)"
Cine_ToadKing,$05FD,1,,0,,0,Level,"Set to 1, initializes Toad and transformed king; set to 2 while running that cinematic"
AScrlURDiag_WrapState_Copy,$05FE,1,,0,,0,Camera,Copy of AScrlURDiag_WrapState
AScrlURDiag_WrapState,$05FF,1,,0,,0,Camera,"The diagonal auto scroller wraps vertically several times to give the illusion of a long vertical strip.  AScrlURDiag_WrapState is set to 1 and 2 during this process which makes it possible.
Objects that need to offset themselves to cope with this behavior utilize AScrlURDiag_WrapState_Copy to stay in sync. (TOFIX)"
Ending_CmdBuffer,$0600,192,,0,,0,Title Screen/Ending,Buffer used during ending sequence
Level_Tile_Head,$0602,1,,0,,0,Player,Tile at Player's head
Level_Tile_GndL,$0603,1,,0,,0,Player,Tile at Player's feet left
Level_Tile_GndR,$0604,1,,0,,0,Player,Tile at Player's feet right
Level_Tile_InFL,$0605,1,,0,,0,Player,"Tile ""in front"" of Player (""lower"", at feet)"
Level_Tile_InFU,$0606,1,,0,,0,Player,"Tile ""in front"" of Player (""upper"", at face)"
Level_Tile_Whack,$0607,1,,0,,0,Player,Tile last hit by tail attack or shell
Level_Tile_Quad,$0608,4,,0,,0,Player,Quadrant of tile for each of the positions above
Level_Tile_Slope,$060D,4,,0,,0,Player,"Slope of tile for each of the positions above (first byte also used by objects)
0: Slope shape at feet
1: Slope shape at head
2: ""in front"" of Player (""lower"", at feet)
3: ""in front"" of Player (""upper"", at face)"
Scroll_Cols2Upd,$0612,1,,0,,0,Graphics,Number of 8x8 columns to update (typically set to 32 for a full dirty update)
Bonus_CoinsYVel,$0619,6,,0,,0,Bonus Game,UNUSED Bonus game coins Y velocity
Bonus_CoinsY,$061F,6,,0,,0,Bonus Game,UNUSED Bonus game coins Y
Bonus_CoinsXVel,$0625,6,,0,,0,Bonus Game,UNUSED Bonus game coins X velocity
Bonus_CoinsX,$062B,6,,0,,0,Bonus Game,UNUSED Bonus game coins X
Bonus_CoinsYVelFrac,$0631,6,,0,,0,Bonus Game,UNUSED Bonus game coins Y velocity fractional accumulator
Bonus_CoinsXVelFrac,$063D,6,,0,,0,Bonus Game,UNUSED Bonus game coins X velocity fractional accumulator
Object_TileFeet,$064B,1,,0,,0,Sprites,"Object tile detected at ""feet"" of object"
Object_TileWall,$064C,1,,0,,0,Sprites,"Object tile detected in front of object, i.e. a wall"
Object_AttrFeet,$064E,1,,0,,0,Sprites,Object tile quadrant of Object_TileFeet
Object_AttrWall,$064F,1,,0,,0,Sprites,Object tile quadrant of Object_TileWall
Objects_SprHVis,$0651,8,,0,,0,Sprites,Flags; Bits 7-2 set when each 8x16 sprite is horizontally off-screen (left-to-right from MSb)
Objects_SpawnIdx,$0659,8,,0,,0,Sprites,Holds the index into level data that this object was spawned from
Objects_State,$0661,8,,0,,0,Sprites,"0 = Dead/Empty
1 = Init
2 = Normal (typical operation)
3 = Shelled (shelled enemy post-stomp)
4 = Held (held by Player)
5 = Kicked (kicked by Player / spinning shell)
6 = Killed (flipped over and falling off screen)
7 = Squashed (generally Goomba only)
8 = ""Poof"" Death (e.g. Piranha death)"
Objects_Frame,$0669,8,$7E0669,8,,0,Sprites,"""Frame"" of object (see ObjectGroup_PatternSets)"
Level_ObjectID,$0671,8,$7E0671,8,,0,Sprites,All active actor IDs
Objects_FlipBits,$0679,8,$7E0679,8,,0,Sprites,Applied sprite attributes for this object (usually just horizontal/vertical flip)
Objects_SprVVis,$0681,8,$7E0681,8,,0,Sprites,Flags; Bits 3-0 set when each 8x16 sprite is vertically off-screen (top-to-bottom from MSb)
Objects_Var1,$0689,8,$7E0689,8,,0,Sprites,Generic variable 1 for objects
Objects_Var2,$0691,8,$7E0691,8,,0,Sprites,Generic variable 2 for objects
Unused699,$0699,1,,0,,0,Empty,"Absolutely no idea, it is set once in one place and never used again... MAY be lost bonus game related?"
Bonus_DieCnt,$069A,1,,0,,0,Bonus Game,"UNUSED Bonus Game Die counter
While the die is rotating, just used as a counter 0 to 3 to time the rolling animation. After Player would press 'A', this value is immediately set to 0.
In the case of the odd/even game, if the Player ""won"", it is set to 5 or 6."
Score_Earned,$069C,2,,0,,0,Misc.,"(16-bit value) A ""buffer"" of score earned to be added to your total, total score stored in Player_Score"
Score_Temp,$069E,1,,0,,0,Misc.,Temp used when figuring out to display a 3-byte integer worth of score
Player_IsHolding,$06A4,1,,0,,0,Flag,Set when Player is holding something (animation effect only)
Player_ISHolding_OLD,$06A5,1,,0,,0,Player,Holds onto whether Player WAS holding onto something (so we can be sure to clear Player_IsHolding)
Objects_Timer3,$06A6,5,,0,,0,Player,"Used as the ""wake up"" out of shell timer
If timer is less than $60, it decrements normally, otherwise...
If object is in state 2, timer decrements normally
If object is in state 4 (being held), timer only decrements every 4 ticks
In all other states, timer decrements every 2 ticks"
Objects_Timer4,$06AB,5,,0,,0,Sprites,"""Timer"" values; automatically decrements to zero (used in ""shakin' awake"" effect)"
Object_SlopeHeight,$06B3,1,,0,,0,Sprites,Object calculated slope height
Buffer_Occupied,$06B4,2,,0,,0,Flag,Set if respective Object_BufferX/Y buffer is already taken by an object
Player_Microgoomba,$06B6,1,,0,,0,Flag,Microgoomba stuck to Player
Player_UphillSpeedIdx,$06B6,1,,0,,0,Player,Override when Player_UphillFlag is set (shared with Player_Microgoomba)
Objects_InWater,$06B7,5,,0,,0,Sprites,Set when object is in water
SpecialObj_Var1,$06BD,8,,0,,0,Sprites,General purpose variable 1
,$06C5,2,,0,,0,Empty,Unused.
SpecialObj_Data,$06C7,8,,0,,0,Sprites,"Special object ""data"" field, defined by object"
,$06CF,2,,0,,0,Empty,Unused.
SpecialObj_Timer,$06D1,8,,0,,0,Sprites,"""Timer"" values; automatically decrements to zero"
,$06D9,2,,0,,0,Empty,Unused.
CannonFire_Var,$06DB,8,,0,,0,Sprites,(TOFIX)
CannonFire_Timer,$06E3,8,,0,,0,Sprites,"Cannon Fire timer, decrements to zero"
Objects_QSandCtr,$06EB,8,,0,,0,Sprites,"When enemy has fallen into quicksand, increments until $90 which deletes it"
,$06F3,13,,0,,0,Empty,Unused.
TileAddr_Off,$0700,1,,0,,0,Level,"During level loading, specifies an offset into the current Mem_Tile_Addr setting"
LevLoad_Unused1,$0701,1,,0,,0,Empty,Unused. Initialized at level load.
LevLoad_Unused2,$0702,1,,0,,0,Empty,Unused. Initialized at level load.
LevLoad_Unused3,$0703,1,,0,,0,Empty,Unused. Initialized at level load.
LevLoad_Unused4,$0704,1,,0,,0,Empty,Unused. Initialized at level load.
,$0705,1,,0,,0,Empty,Unused.
LL_ShapeDef,$0706,1,,0,,0,Level,"During level loading, defines a shape of something (context-specific)"
Scroll_UpdAttrFlag,$0707,1,,0,,0,Bonus Game,Set when it is time to update attributes
,$0708,2,,0,,0,Empty,Unused.
Level_Tileset,$070A,1,,0,,0,Level,Different tilesets which changes the detection and meaning in levels (TOFIX)
Bonus_UnusedVH,$070B,1,,0,,0,Bonus Game,VRAM High address ?? Seems to only be part of an unused routine
ToadTalk_VH,$070B,1,,0,,0,Level,"Cinematic Toad & King / ""Toad House"" Toad VRAM Address High"
Bonus_UnusedVL,$070C,1,,0,,0,Bonus Game,VRAM Low address ?? Seems to only be part of an unused routine
ToadTalk_VL,$070C,1,,0,,0,Level,"Cinematic Toad & King / ""Toad House"" Toad VRAM Address Low"
BonusText_CPos,$070D,1,,0,,0,Bonus Game,(TOFIX)
ToadTalk_CPos,$070D,1,,0,,0,Level,"Cinematic Toad & King / ""Toad House"" Toad Character Position"
BonusText_CharPause,$070E,1,,0,,0,Counter,Counter that decrements to zero between letters
Bonus_UnusedFlag,$070F,1,,0,,0,Flag,Doesn't do much besides block an unused subroutine
Map_Pan_Count,$0710,1,,0,,0,Counter,"Map is panning, counts to zero (Scroll_LastDir sets which direction we're panning)"
Bonus_Timer,$0711,1,,0,,0,Counter,Decrements to zero
Map_Intro_Tick,$0711,1,,0,,0,Counter,"Counts down to zero while displaying the ""World X"" intro"
CineKing_Timer2,$0711,1,,0,,0,Counter,Timer; decrements to zero
,$0712,1,,0,,0,Empty,Unused.
Map_ReturnStatus,$0713,1,,0,,0,Overworld,"When 0, level panel is cleared; otherwise, Player is considered to have died (decrements life!)"
MaxPower_Tick,$0714,1,,0,,0,Player,"When Player has maximum ""power"" charge, this counts for the flashing [P]"
Player_Score,$0715,3,,0,,0,Misc.,"Treated as 3-byte integer, with least significant zero on display not part of this value"
,$0718,1,,0,,0,Empty,Unused.
PatTable_BankSel,$0719,6,,0,,0,Graphics,Provides an array of 6 pages to set the entire Pattern Table [BG_Full_CHRROM_Switch]
PAGE_C000,$071F,1,,0,,0,Hardware Mirror,Page to set PRG ROM C000 (PRGROM_Change_Both)
PAGE_A000,$0720,1,,0,,0,Hardware Mirror,Page to set PRG ROM A000 (PRGROM_Change_Both)
PAGE_CMD,$0721,1,,0,,0,Hardware Mirror,"When using PRGROM_Change_Both2 or PRGROM_Change_A000, this value stores the MMC3 command"
Map_Prev_XOff,$0722,2,,0,,0,Overworld,(Mario/Luigi) Stores previous scroll X offset on map
Map_Prev_XHi,$0724,2,,0,,0,Overworld,"(Mario/Luigi) Stores previous ""hi byte"" of map X"
Player_Current,$0726,1,,0,,0,Player,"Which Player is currently up (0 = Mario, 1 = Luigi)"
World_Num,$0727,1,,0,,0,Overworld,"Current world index (0-8, where 0 = World 1, 7 = World 8, 8 = World 9 / Warp Zone)"
World_EnterState,$0728,1,,0,,0,Overworld,"State variable during ""world X"" intro entrance, set to 3 when entering a level; overlaps GameOver_State"
GameOver_State,$0728,1,,0,,0,Overworld,"State variable used during ""Gameover!"" sequence only; overlaps World_EnterState"
CineKing_State,$0728,1,,0,,0,Level,State of King-got-his-wand-back sequence
Map_Operation,$0729,1,,0,,0,Overworld,"Current ""operation"" happening on map (See Map_DoOperation in PRG010)"
,$072A,1,,0,,0,Empty,Unused.
Total_Players,$072B,1,,0,,0,Misc.,"Total players (0 = 1P, 1 = 2P)"
Map_Unused72C,$072C,1,,0,,0,Empty,"No apparent use; only assigned to, but never read back"
Bonus_DDDD,$072D,1,,0,,0,Bonus Game,?? Set to '1' if you exit the unused bonus game BONUS_UNUSED_DDDD
Map_HandState,$072E,1,,0,,0,Overworld,Hand trap state (TOFIX)
,$072F,1,,0,,0,Empty,Unused.
Map_WW_Backup_Y,$0730,1,,0,,0,Overworld,Warp Whistle wind backs up the Player's map Y
Map_WW_Backup_XH,$0731,1,,0,,0,Overworld,Warp Whistle wind backs up the Player's map X Hi byte
Map_WW_Backup_X,$0732,1,,0,,0,Overworld,Warp Whistle wind backs up the Player's map X
Map_WW_Backup_UPV2,$0733,1,,0,,0,Overworld,Warp Whistle wind backs up Map_UnusedPlayerVal2
,$0734,2,,0,,0,Empty,Unused.
Player_Lives,$0736,2,,0,,0,Player,(Mario/Luigi) Player's lives
Map_Unused738,$0738,1,,0,,0,Empty,Index used in some dead code in PRG011; sometimes index of unused array Map_Unused7DC6
ClearPattern,$0739,1,,0,,0,Graphics,Set by ClearPattern_ByTileset for use in Clear_Nametable_Short
PalSel_Tile_Colors,$073A,1,,0,,0,Palettes,Stores value to index which tile color set to use when palette loading routine is called
PalSel_Obj_Colors,$073B,1,,0,,0,Palettes,Stores value to index which object color set to use when palette loading routine is called
Player_FallToKing,$073C,2,,0,,0,Player,(Mario/Luigi) Player will fall to king when Level_ExitToMap is nonzero (instead of map)
Map_Player_SkidBack,$073E,2,,0,,0,Overworld,"(Mario/Luigi) Set to '1' if Player died last turn or otherwise ejected (that is, they DID skid from their last turn, not necessarily currently skidding)"
Map_NSpadeMatches,$0740,1,,0,,0,Overworld,Keeps count of N-Spade matches of active session (9 means game is done)
Map_NSpadeInProg,$0741,1,,0,,0,Flag,"If set, there's an N-Spade game ""in progress"" (so if you lose, you pick it up later)"
Map_Airship_Trav,$0742,1,,0,,0,Overworld,"Airship's current travel-table offset (randomly offset by 0-2, spices up life)"
,$0743,2,,0,,0,Empty,Unused.
Map_DoFortressFX,$0745,1,,0,,0,Overworld,"Bust locks, build bridges, whatever after Mini-Fortress is toppled"
World_Map_Power,$0746,2,,0,,0,Overworld,"(Mario/Luigi) MAP Power up # (1 - big, 2 - Fire, 3 - Leaf, 4 - Frog, 5 - Tanooki, 6 - Hammer, 7 - Judgems, 8 - Pwing, 9 - Star)"
,$0748,1,,0,,0,Empty,Unused.
Map_Unused749,$0749,2,,0,,0,Overworld,(Mario/Luigi) ? Another value just set once and never read back!
,$074B,1,,0,,0,Empty,Unused.
Object_VelCarry,$074C,1,,0,,0,Flag,'1' when last Object Velocity fraction accumulation rolled over
Player_XVelFrac,$074D,1,,0,,0,Player,X velocity fractional accumulator
Objects_XVelFrac,$074E,8,,0,,0,Sprites,Other object's X velocity fractional accumulator
,$0756,1,,0,,0,Empty,Unused.
THouse_UnusedFlag,$0757,1,,0,,0,Flag,"Cleared when Toad House gives you an item, but never used otherwise"
,$0758,7,,0,,0,Empty,Unused.
Player_YVelFrac,$075F,1,,0,,0,Player,Y velocity fractional accumulator
Objects_YVelFrac,$0760,8,,0,,0,Sprites,Other object's Y velocity fractional accumulator
Objects_ColorCycle,$0768,8,,0,,0,Sprites,"Cycles colors of object and decrements to zero (e.g. ""Melting"" ice block, starman, etc.)"
Objects_Var6,$0770,5,,0,,0,Sprites,"General purpose variable 6

Special hardcoded behavior for the following objects ONLY:
OBJ_FIRECHOMP, OBJ_CHAINCHOMPFREE, OBJ_BLOOPERCHILDSHOOT, OBJ_BLOOPERWITHKIDS, or OBJ_FIRESNAKE
... as the X/Y buffer slot they occupy (see Object_Delete)"
Objects_TargetingXVal,$0775,5,,0,,0,Sprites,X velocity result of Object_CalcHomingVels for this object OR some other X pixel target
King_Y,$077A,1,,0,,0,Sprites,Y position (NOTE: shared with Objects_TargetingYVal)
Objects_TargetingYVal,$077A,5,,0,,0,Sprites,Y velocity result of Object_CalcHomingVels for this object OR some other Y pixel target
Pipe_TransYDelta,$077F,1,,0,,0,Level,In-level transit pipe Y delta value (WARNING: Shared with Level_ScrollDiffV)
Level_ScrollDiffV,$077F,1,,0,,0,Camera,Difference between desired vertical and the current Vert_Scroll (WARNING: Shared with Pipe_TransYDelta)
Level_ScrollDiffH,$0780,1,,0,,0,Camera,Difference between desired horizontal and the current Horz_Scroll
Random_Pool,$0781,10,,0,,0,Misc.,Data pool for pseudo-random number generator algorithm
Map_PlayerLost2PVs,$078B,1,,0,,0,Battle Mode,"When > 0, (1=Mario, 2=Luigi) doesn't lose a life for ""death"" exiting to map, but does lose their turn"
,$078C,1,,0,,0,Empty,Unused.
Player_RescuePrincess,$078D,1,,0,,0,Level,Player will jump to the princess rescue when Level_ExitToMap is nonzero (instead of map)
,$078E,8,,0,,0,Empty,Unused.
Objects_PlayerHitStat,$0796,8,,0,,0,Player,"Player hit status
Bit 0 - Set if Player's bbox bottom is HIGHER than object's bbox bottom
Bit 1 - Set if Player's bbox left edge is to the LEFT of object's bbox left edge
Bit 4 - Set if Player tail attacked an object"
Scores_Value,$079E,5,,0,,0,Sprites,"score ""value""; '0' none, (10, 20, 40, 80, 100, 200, 400, 800, 1000, 2000, 4000, 8000, 1-up)"
Scores_Counter,$07A3,5,,0,,0,Sprites,"""counter"" until score disappears"
Scores_Y,$07A8,5,,0,,0,Sprites,Score's Y
Scores_X,$07AD,5,,0,,0,Sprites,Score's X
LRBounce_Y,$07B2,1,,0,,0,Sprites,Left/right bouncer as sprite Y ($FF is disabled)
LRBounce_X,$07B3,1,,0,,0,Sprites,Left/right bouncer as sprite X
LRBounce_Vel,$07B4,1,,0,,0,Sprites,Left/right bouncer absolute value of X velocity
Objects_Slope,$07B5,5,,0,,0,Sprites,Absolute slope calc value
,$07BA,1,,0,,0,Empty,Unused.
World3_Bridge,$07BB,1,,0,,0,Flag,"0 - Bridges are down, 1 - Bridges are up"
ArrowPlat_IsActive,$07BC,1,,0,,0,Flag,Set if arrow platform is active
Level_GetWandState,$07BD,1,,0,,0,Level,See Koopaling code in PRG001 (TOFIX)
Video_DoPalUpd,$07BE,1,,0,,0,Palettes,Name consistent with Video_Upd_Table (TOFIX)
Palette_AddrHi,$07BE,1,,0,,0,Palettes,Stores high part of palette address when committing palettes
Palette_AddrLo,$07BF,1,,0,,0,Palettes,Stores low part of palette address when committing palettes
Palette_BufCnt,$07C0,1,,0,,0,Palettes,32 for updating entire palette
Palette_Buffer,$07C1,32,,0,,0,Palettes,"Buffer of palette bytes to commit, used for fade in/out"
Palette_Term,$07E1,1,,0,,0,Palettes,"Set to zero as terminator, per requirement of the Video_Upd_Table format"
BigQBlock_GotIt,$07E2,1,,0,,0,Level,"Big ? Blocks can only be retrieved once; this is a bitfield that marks which ones you've gotten by setting a bit per screen space in the Big ? Block area.
Basically, if you reenter a Big ? Block area after opening it, it won't reappear! See ObjInit_BigQBlock and ObjNorm_BigQBlock for usage...
NOTE: This is cleared completely upon Player death which works since levels are not re-enterable, but still seems a bit extreme..."
,$07E3,13,,0,,0,Empty,Unused.
DMC_Queue,$07F0,1,,0,,0,Audio,Stores value to play on DMC
DMC_Current,$07F1,1,,0,,0,Audio,Currently playing DMC sound
Sound_Sq1_CurFL,$07F2,1,,0,,0,Audio,"Holds current ""low"" frequency of Square Wave 1 (Warning: Must be +4 to Sound_Sq2_CurFL, see PRG031_E808)"
Music_NseStart,$07F3,1,,0,,0,Audio,"Holds the starting offset of the noise track (CHECK: Reuse of $07F3, is this bad??)"
,$07F4,1,,0,,0,Empty,Unused.
Music2_Hold,$07F5,1,,0,,0,Audio,"A very little used feature, Music Set 1 overrides Music Set 2, but after a M1 song finishes, it restarts the M2 song"
Sound_Sq2_CurFL,$07F6,1,,0,,0,Audio,"Holds current ""low"" frequency of Square Wave 1 (Warning: Must be +4 from Sound_Sq1_CurFL, see PRG031_E808)"
Music_Sq2Patch,$07F7,1,,0,,0,Audio,"Current ""instrument patch"" for Square 2 (only upper 4 bits stored, 0ppp 0000)"
Music_Sq1Patch,$07F8,1,,0,,0,Audio,"Current ""instrument patch"" for Square 1 (only upper 4 bits stored, 0ppp 0000)"
,$07F9,1,,0,,0,Empty,Unused.
Sound_Map_L2Hld,$07FA,1,,0,,0,Audio,"Same as Sound_Map_LHold, used for the secondary track (Warning: Will be affected by triangle, see PRG031_E808)"
Sound_Map_Len2,$07FB,1,,0,,0,Audio,"Same as Sound_Map_Len, used for the secondary track"
Sound_Map_LHold,$07FC,1,,0,,0,Audio,"Current length setting, used as delay after each byte of map sound (changed by special bytes in range $80-$FF)"
Sound_Map_Len,$07FD,1,,0,,0,Audio,Countdown tick for current note/rest that map sound effect is on
Sound_Map_Off2,$07FE,1,,0,,0,Audio,"Same as Sound_Map_Off, used for the secondary track"
Sound_Unused7FF,$07FF,1,,0,,0,Empty,"Cleared once, never used otherwise"
Tile_Mem,$6000,6480,,0,,0,Misc.,"Space used to store the 16x16 ""tiles"" that make up the World Map or Level

Vertical level max size is 15 rows * 16 columns * 16 screens = 3840 ($0F00) bytes
Non-vertical level max size is 27 rows * 16 columns * 15 screens = 6480 ($1950) bytes"
Vs_PlayerFrame,$6800,2,,0,,0,Battle Mode,Mario/Luigi Frame
Vs_MemStart,$6800,1,,0,,0,Battle Mode,"Should be at ""top""; this point and 512 bytes forward are cleared at start of 2P Vs"
Vs_PlayerState,$6802,2,,0,,0,Battle Mode,"Mario/Luigi State (0=Init, 1=Normal, 2=Dying, 3=Ladder climbing)"
Vs_ObjectState,$6804,12,,0,,0,Battle Mode,"Objects State (0=Dead/empty, 1=Normal, 2=Flipped over, 3=Dying)"
Vs_PlayerBlkHitCnt,$6811,2,,0,,0,Battle Mode,
Vs_PlayerY,$6813,2,,0,,0,Battle Mode,Mario/Luigi Y
Vs_ObjectsY,$6815,12,,0,,0,Battle Mode,Objects Y
Vs_PlayerBlkHitY,$6822,2,,0,,0,Battle Mode,Mario/Luigi Aligned Y position where block was hit
Vs_PlayerX,$6824,2,,0,,0,Battle Mode,Mario/Luigi X
Vs_ObjectsX,$6826,12,,0,,0,Battle Mode,Objects X
Vs_PlayerBlkHitX,$6833,2,,0,,0,Battle Mode,Mario/Luigi Aligned Y position where block was hit
Vs_PlayerYVel,$6835,2,,0,,0,Battle Mode,Mario/Luigi Y Velocity
Vs_ObjectYVel,$6837,12,,0,,0,Battle Mode,Objects Y Velocity
Vs_PlayerBlkHitYVel,$6844,2,,0,,0,Battle Mode,Mario/Luigi Hit block Y velocity
Vs_PlayerXVel,$6846,2,,0,,0,Battle Mode,Mario/Luigi X Velocity
Vs_ObjectXVel,$6848,12,,0,,0,Battle Mode,Objects X Velocity
Vs_PlayerClimbFrame,$6857,2,,0,,0,Battle Mode,Incremented as Player climbs
Vs_ObjectAnimCnt,$6859,12,,0,,0,Battle Mode,A continuous counter per object for animating (typically 2 frames)
Vs_PlayerDir,$6866,2,,0,,0,Battle Mode,"Mario/Luigi direction (1=Right, 2=Left)"
Vs_ObjectDir,$6868,12,,0,,0,Battle Mode,"Objects direction (1=Right, 2=Left)"
Vs_PlayerYVelFrac,$6875,2,,0,,0,Battle Mode,Mario/Luigi Y velocity fractional accumulator
Vs_ObjectYVelFrac,$6877,12,,0,,0,Battle Mode,Objects Y velocity fractional accumulator
Vs_PlayerXVelFrac,$6886,2,,0,,0,Battle Mode,Mario/Luigi X velocity fractional accumulator
Vs_ObjectXVelFrac,$6888,12,,0,,0,Battle Mode,Objects X velocity fractional accumulator
Vs_PlayerDetStat,$6897,2,,0,,0,Battle Mode,Mario/Luigi detection status
Vs_ObjectDetStat,$6899,12,,0,,0,Battle Mode,Objects detection status
Vs_ObjectVar1,$68A8,12,,0,,0,Battle Mode,General variable 1
Vs_PlayerKick,$68B5,2,,0,,0,Battle Mode,Mario/Luigi Player is kicking until decrements to zero
Vs_PlayerDizzy,$68B7,2,,0,,0,Battle Mode,"Mario/Luigi Player ""dizzy"" face until decrements to zero"
Vs_PlayerStick,$68B9,2,,0,,0,Battle Mode,"Mario/Luigi Mario/Luigi Player ""sticking"" to ceiling; decrements to zero"
Vs_PlayerBumpTimer,$68BB,1,,0,,0,Battle Mode,Mario/Luigi Players bumped off eachother (and can't again until zero); decrements to zero
Vs_POWBlockCnt,$68BC,1,,0,,0,Battle Mode,"POW block counter; decrements to zero; until then, POW shaking!"
Vs_ObjectId,$68BD,12,,0,,0,Battle Mode,Objects ID (TOFIX)
Vs_ObjectSprRAMOff,$68CA,1,,0,,0,Battle Mode,Current object Sprite RAM offset
Vs_ObjectSprRAMSel,$68CB,1,,0,,0,Battle Mode,Counter that runs $D to $0 (inclusive) and helps distribute Sprite RAM offsets among the objects
Vs_EnemyCount,$68CC,1,,0,,0,Battle Mode,Number of spawned enemies (in the typical game)
Vs_PlayerHaltTimer,$68CD,2,,0,,0,Battle Mode,Mario/Luigi timer which halts gameplay; decrements to zero
Vs_ObjHaltTimer,$68CF,12,,0,,0,Battle Mode,Object timer which halts object when greater than zero; decrements to zero
Vs_ObjectTimer3,$68DC,12,,0,,0,Battle Mode,"Object timer, decrements"
Vs_PlayerCnt,$68E9,2,,0,,0,Battle Mode,"Mario/Luigi ""counter"" value; decrements to zero"
Vs_EnemyGetUpTimer,$68EB,12,,0,,0,Battle Mode,Timer for flipped-over enemy; decrements to zero
Vs_PlayerJumped,$68F8,2,,0,,0,Battle Mode,Set to 1 if Player jumped; prevents Player from jumping again until they hit floor
Vs_PlayerTileL,$68FA,2,,0,,0,Battle Mode,Mario/Luigi Tile detected at Player's feet
Vs_ObjectTileL,$68FC,12,,0,,0,Battle Mode,Tile detected at objects's feet
Vs_PlayerBlkHit,$690A,2,,0,,0,Battle Mode,Mario/Luigi Holds Tile_Mem offset to bounce block they hit
Vs_PlayerFlashInv,$690C,2,,0,,0,Battle Mode,Mario/Luigi Flashing invicibility (?)
Vs_SpawnCnt2,$690E,1,,0,,0,Battle Mode,FIXME describe better (TOFIX)
Vs_TooLongCnt,$690F,1,,0,,0,Battle Mode,"Increments after each round of spawning; if it overflows, ""game ender"" fireballs are spawned"
Vs_CurIndex,$6910,1,,0,,0,Battle Mode,Current index (Player or object)
Vs_PlayerTileU,$6911,2,,0,,0,Battle Mode,Mario/Luigi Tile detected above Player's feet
Vs_ObjectPipeTimer,$6920,12,,0,,0,Battle Mode,Timer used for enemies to exit and emerge from pipes; decrements to zero
Vs_Random,$692D,3,,0,,0,Battle Mode,Random generator for 2P Vs mode
Vs_PlayerCoins,$6930,2,,0,,0,Battle Mode,Player's coins (in 2P Vs); 5 wins the match
Vs_TimeToExit,$6932,1,,0,,0,Battle Mode,Decrements to zero then exits the 2P Vs
Vs_ObjectIsLast,$6933,12,,0,,0,Battle Mode,"Set if this is the last object (turns blue, move fast)"
Vs_POWHits,$6940,1,,0,,0,Battle Mode,Number of times POW block has been hit (disabled on 3)
Vs_PlayerYOff,$6941,2,,0,,0,Battle Mode,Mario/Luigi Y offset applied
Vs_UNKGAMECnt,$6943,1,,0,,0,Battle Mode,"Unknown ""game"" counter; after overflow, we exit"
Vs_PlayerYHi,$6944,2,,0,,0,Battle Mode,Mario/Luigi Y Hi
Vs_ObjectYHi,$6946,12,,0,,0,Battle Mode,Object Y Hi
Vs_ObjectIsAngry,$6955,12,,0,,0,Battle Mode,Set when Sidestepper is angry (not used for anything else)
Vs_AngrySidesteppers,$6962,1,,0,,0,Battle Mode,"When greater than zero, and spawning a Sidestepper, next one is an ""angry"" Sidestepper (then decrement)"
Vs_ObjectVDir,$6964,12,,0,,0,Battle Mode,"Objects vertical direction (4=Down, 8=Up)"
Vs_ObjectRestoreXVel,$6971,12,,0,,0,Battle Mode,Flipped over object restore X velocity
Vs_ObjTimer2,$697E,12,,0,,0,Battle Mode,Object timer; decrements to zero
Vs_CardFlash,$698B,2,,0,,0,Battle Mode,Mario/Luigi Cycles color for card (when picked up from another Player)
Vs_HaltTimerBackup,$698D,15,,0,,0,Battle Mode,Backs up all halt timers
Vs_EnemySet,$699C,1,,0,,0,Battle Mode,"Specifies an index of active enemy set, selecting one of the quintuples from Vs_5EnemySets"
Vs_ObjectXOff,$699D,1,,0,,0,Battle Mode,A one-shot X offset for display of object FIXME: When?
Vs_PlayerWalkCnt,$699E,2,,0,,0,Battle Mode,Mario/Luigi counts up and overflows to toggle walk frames
Vs_PlayerWalkFrame,$69A0,2,,0,,0,Battle Mode,Mario/Luigi incremented when Vs_PlayerWalkCnt overflows
Vs_NextObjectIsLast,$69A2,1,,0,,0,Battle Mode,"If there are 5 enemies and this is set, next enemy out is the ""last"" (turns blue, moves fast)"
Vs_xUpCnt,$69A3,2,,0,,0,Battle Mode,"Mario/Luigi ""x Up"" counter"
Vs_xUpY,$69A5,2,,0,,0,Battle Mode,"Mario/Luigi ""x Up"" Y pos"
Vs_xUpX,$69A7,2,,0,,0,Battle Mode,"Mario/Luigi ""x Up"" X pos"
Vs_xUpLives,$69A9,2,,0,,0,Battle Mode,"Mario/Luigi ""x Up"" Lives amount (1, 2, 3, 5)"
Vs_SpawnCnt,$69AB,1,,0,,0,Battle Mode,Spawn counter; increments and triggers spawning
Map_MoveRepeat,$7950,2,,0,,0,Overworld,(Mario/Luigi) counts up to $18 and then you keep moving without pause
AScrlURDiag_OffsetX,$7952,1,,0,,0,Camera,"When diagonal autoscroller is wrapping, this holds an X offset for Player/Objects to temporarily correct"
AScrlURDiag_OffsetY,$7953,1,,0,,0,Camera,"When diagonal autoscroller is wrapping, this holds an Y offset for Player/Objects to temporarily correct"
StatusBar_UpdFl,$7954,1,,0,,0,Misc.,Status bar Update Flag; toggles so to update status bar only every other frame
UpdSel_Disable,$7955,1,,0,,0,Misc.,"When set, disables the Update_Select routine during the NMI, which halts most activity due to no reported V-Blanking"
Map_Objects_Itm,$7956,13,,0,,0,Overworld,"""Item given by"" map objects"
Level_TreasureItem,$7963,1,,0,,0,Level,Item that will be given by treasure box; set by the object OBJ_TREASURESET by its row (TOFIX)
Reset_Latch,$7964,1,,0,,0,Misc.,"If this value is anything besides $5A, the reset is run (I assume this is considered a safe value in case of data corruption, e.g. from runaway generator)"
Map_BonusType,$7965,1,,0,,0,Overworld,"0 = No bonus, 1 = White Toad House, 2 = UNKNOWN WHITE THING (MAPOBJ_UNK0C)"
Map_BonusCoinsReqd,$7966,1,,0,,0,Overworld,Number of coins you need for White Toad House (or the MAPOBJ_UNK0C thing!); value ranges 0-127
Coins_ThisLevel,$7967,1,,0,,0,Level,Internal counter of coins earned -this level- (so always starts at 0 and increments)
Map_NSpade_NextScore,$7968,3,,0,,0,Overworld,Treated as 3-byte integer
Map_BonusAppY,$796B,1,,0,,0,Overworld,"Map ""white"" bonus appearance Y (set to Player's last ""succeeded"" map position)"
Map_BonusAppXHi,$796C,1,,0,,0,Overworld,"Map ""white"" bonus appearance XHi (set to Player's last ""succeeded"" map position)"
Map_BonusAppX,$796D,1,,0,,0,Overworld,"Map ""white"" bonus appearance X (set to Player's last ""succeeded"" map position)"
Map_NoLoseTurn,$796E,1,,0,,0,Flag,"If set, Player does not lose turn after having completed a level (used for Toad House, pipeways, etc.)"
Map_Got13Warp,$796F,1,,0,,0,Flag,Set non-zero if Player already got the 1-3 Warp Whistle
Map_Anchored,$7970,1,,0,,0,Flag,Set if anchor is set on this map
Map_WhiteHouse,$7971,1,,0,,0,Flag,Set if you have already earned the White Toad House for this world
Map_CoinShip,$7972,1,,0,,0,Flag,Set if you have already earned the Coin Ship for this world
Map_WasInPipeway,$7973,1,,0,,0,Flag,Set if you just came out of a pipeway
EndCard_Flag,$7974,1,,0,,0,Flag,Set when End Level card is hit (can determine when level has ended)
Map_PlyrSprOvrY,$7975,1,,0,,0,Overworld,"""Player Sprite Override Y""; If set to $F8 during warp, erases Player's map sprite; otherwise provides a Y to put it at"
Map_Entered_Y,$7976,2,,0,,0,Overworld,(Mario/Luigi) Stores the Y value when you enter a level; this is the Y used if you complete the level
Map_Entered_XHi,$7978,2,,0,,0,Overworld,(Mario/Luigi) Hi byte for Map_Entered_X
Map_Entered_X,$797A,2,,0,,0,Overworld,"(Mario/Luigi) Same as Map_Entered_Y, only for X"
Map_Previous_UnusedPVal2,$797C,2,,0,,0,Overworld,(Mario/Luigi) Backup of Map_UnusedPlayerVal2
Map_Previous_Y,$797E,2,,0,,0,Overworld,"(Mario/Luigi) Stores the previous Y you were ""safe"" at; this is the Y you go back to if you die"
Map_Previous_XHi,$7980,2,,0,,0,Overworld,"(Mario/Luigi) Same as Map_Previous_Y, only for XHi"
Map_Previous_X,$7982,2,,0,,0,Overworld,"(Mario/Luigi) Same as Map_Previous_Y, only for X"
Map_Unused7984,$7984,2,,0,,0,Empty,(Mario/Luigi) Unused; cleared and never touched again
Map_Prev_XOff2,$7986,2,,0,,0,Overworld,"(Mario/Luigi) Holds a copy of Map_Prev_XOff, but I'm not sure why?"
Map_Prev_XHi2,$7988,2,,0,,0,Overworld,"(Mario/Luigi) Holds a copy of Map_Prev_XHi, but I'm not sure why?"
Map_Unused798A,$798A,2,,0,,0,Hardware Mirror,(Mario/Luigi) Unused; cleared and never touched again
Level_Jct_HSHi,$798C,1,,0,,0,Camera,Level junction horizontal scroll high value
Level_Jct_HS,$798D,1,,0,,0,Camera,Level junction horizontal scroll value
Level_Jct_VSHi,$798E,1,,0,,0,Camera,Level junction vertical scroll high value
Level_Jct_VS,$798F,1,,0,,0,Camera,Level junction vertical scroll value
,$7990,2,,0,,0,Empty,Unused.
Map_Unused7992,$7992,1,,0,,0,Overworld,Value used in some dead code in PRG011; cleared elsewhere (NOT SURE if maybe it sometimes meant Bonus_DiePos?)
Bonus_DiePos,$7992,1,,0,,0,Bonus Game,"UNUSED Die in the lost bonus games, counts 0-5"
Map_Previous_Dir,$7993,2,,0,,0,Overworld,"(Mario/Luigi) Backup movement dir (remember which way Player moved last) (8=Up, 4=Down, 2=Left, 1=Right)"
Map_Unused7995,$7995,1,,0,,0,Empty,Unused; cleared but never used otherwise
Player_NoSlopeStick,$7996,1,,0,,0,Flag,"If set, Player does not stick to slopes (noticeable running downhill)"
,$7997,105,,0,,0,Empty,Unused.
AScroll_Anchor,$7A00,1,,0,,0,Misc.,"Used as starting point for $7A00-$7A14 clear, but never actually used in Auto-Scroll"
Level_AScrlSelect,$7A01,1,,0,,0,Level,Selects auto scroll routine to use (see PRG009_B922) (TOFIX)
CineKing_WandState,$7A01,1,,0,,0,Sprites,"Wand state; 0 = falling, 1 = spinning, 2 = held"
CineKing_WandFrame,$7A02,1,,0,,0,Sprites,Wand frame; 0 to 7
Level_AScrlLimitSel,$7A02,1,,0,,0,Camera,"""Limit Selector"" for the auto scroll (typically selects an end or a start/end pair, depending on style)"
CineKing_ToadFrame,$7A03,1,,0,,0,Sprites,Toad's frame
Level_AScrlVar,$7A03,1,,0,,0,Camera,"Variable used for different things depending on the auto scroll style
In horizontal scroll style (Level_AScrlSelect = 0), it's the current ""movement"" (see table AScroll_Movement)"
Level_AScrlLoopSel,$7A04,1,,0,,0,Camera,"Currently selected ""movement loop"" (horizontal only, see AScroll_MovementLoopStart; Just a var in others?)"
CineKing_DiagHi,$7A04,1,,0,,0,Level,Text high address value
Level_AScrlMoveRepeat,$7A05,1,,0,,0,Camera,"Repeat current move until zero (decrements each full expiration of Level_AScrlMoveTicks); $FF when on last move, passes control to movement loop"
Level_AScrlLoopCurMove,$7A06,1,,0,,0,Camera,"Current ""movement loop"" index (into AScroll_MovementLoop)"
Level_AScrlSclLastDir,$7A07,1,,0,,0,Camera,"Auto scroll ""Scroll_LastDir"""
CineKing_TimerT,$7A08,1,,0,,0,Sprites,Cheering Toad animation Timer
Level_AScrlMoveTicks,$7A08,1,,0,,0,Camera,"Counts down to zero, decrements Level_AScrlMoveRepeat (goes to next ""movement"")"
CineKing_Timer3,$7A09,1,,0,,0,Counter,Timer decremented every 4 ticks (does not appear to be used!)
Level_AScrlTimer,$7A09,1,,0,,0,Camera,"Auto scroll counter, decrements to zero"
Level_AScrlPosHHi,$7A0A,1,,0,,0,Camera,"Raster effect horizontal ""high"" position"
,$7A0B,1,,0,,0,Empty,Unused.
Level_AScrlPosH,$7A0C,1,,0,,0,Camera,Raster effect horizontal position
CineKing_WandX,$7A0C,1,,0,,0,Sprites,Wand X position
CineKing_WandY,$7A0D,1,,0,,0,Sprites,Wand Y position
Level_AScrlPosV,$7A0D,1,,0,,0,Camera,Raster effect vertical position
Level_AScrlHVel,$7A0E,1,,0,,0,Camera,"Auto scroll horizontal ""velocity"""
CineKing_WandXVel,$7A0E,1,,0,,0,Sprites,Wand X velocity (4.4FP)
CineKing_WandYVel,$7A0F,1,,0,,0,Sprites,Wand Y velocity (4.4FP)
Level_AScrlVVel,$7A0F,1,,0,,0,Camera,"Auto scroll vertical ""velocity"""
CineKing_WandXVel_Frac,$7A10,1,,0,,0,Sprites,Wand X velocity fractional accumulator
Level_AScrlHVelFrac,$7A10,1,,0,,0,Camera,Auto scroll horizontal velocity fractional accumulator 
Level_AScrlVVelFrac,$7A11,1,,0,,0,Camera,Auto scroll vertical velocity fractional accumulator 
CineKing_WandYVel_Frac,$7A11,1,,0,,0,Sprites,Wand Y velocity fractional accumulator
Level_AScrlHVelCarry,$7A12,1,,0,,0,Camera,'1' when last auto scroll H Velocity fraction accumulation rolled over
Level_AScrlVVelCarry,$7A13,1,,0,,0,Camera,'1' when last auto scroll V Velocity fraction accumulation rolled over
World8Tank_OnTank,$7A14,1,,0,,0,Flag,Set when Player is standing on tank surface in Tank level (as opposed to ground); for the illusion the tank is moving through...
CannonFire_ID,$7A15,8,,0,,0,Sprites,ID of the cannon fire
CannonFire_YHi,$7A1D,8,,0,,0,Sprites,Cannon fire Y Hi
CannonFire_Y,$7A25,8,,0,,0,Sprites,Cannon fire Y
CannonFire_XHi,$7A2D,8,,0,,0,Sprites,Cannon fire X Hi
CannonFire_X,$7A35,8,,0,,0,Sprites,Cannon fire X
CannonFire_Parent,$7A3D,8,,0,,0,Sprites,"Tie back to level object index of ""parent"" object"
Splash_DisTimer,$7A45,1,,0,,0,Player,Player water splashes are disabled until decrements to zero; set when Player hits any bounce block
ShellKillFlash_Cnt,$7A46,1,,0,,0,Sprites,"""Shell Kill Flash"" counter"
ShellKillFlash_Y,$7A47,1,,0,,0,Sprites,"""Shell Kill Flash"" Y"
ShellKillFlash_X,$7A48,1,,0,,0,Sprites,"""Shell Kill Flash"" X"
Objects_DisPatChng,$7A49,6,,0,,0,Sprites,"If set, this object no longer enforces a pattern bank change"
ObjSplash_DisTimer,$7A4F,6,,0,,0,Sprites,Object water/lava splashes are disabled until decrements to zero
PlayerProj_XVelFrac,$7A55,2,,0,,0,Sprites,Player Projectile X velocity fractional accumulator
CannonFire_Timer2,$7A57,8,,0,,0,Sprites,Cannon Fire timer (decrements to zero)
Roulette_Unused7A5F,$7A5F,1,,0,,0,Bonus Game,Unused value in Roulette game
Roulette_Unused7A5F_Delta,$7A60,1,,0,,0,Bonus Game,Delta value added to Roulette_Unused7A5F
Bowser_Tiles,$7A61,2,,0,,0,Sprites,Bowser's detected tiles (to determine what to break)
Bowser_Counter1,$7A63,1,,0,,0,Sprites,"A counter used by Bowser, decrements to zero"
Bowser_Counter2,$7A64,1,,0,,0,Sprites,"A counter used by Bowser, decrements to zero"
Bowser_Counter3,$7A65,1,,0,,0,Sprites,"A counter used by Bowser, random setting, decrements to zero"
CoinShip_CoinGlowIdx,$7A66,1,,0,,0,Palettes,Coin Ship only: Glowing coins palette color index
CoinShip_CoinGlowCnt,$7A67,1,,0,,0,Palettes,Coin Ship only: Glowing coins palette color counter
SObjBlooperKid_OutOfWater,$7A68,8,,0,,0,Sprites,"Blooper kid only; if set, Blooper Kid is trying to go out of water"
,$7A70,2,,0,,0,Empty,Unused.
Object_SplashAlt,$7A72,1,,0,,0,Misc.,"Used to alternate the ""splash slots"" 1 and 2 as objects hit the water"
,$7A73,109,,0,,0,Empty,Unused.
Music_Start,$7AE0,1,,0,,0,Audio,Music start index (beginning of this song)
Music_End,$7AE1,1,,0,,0,Audio,Music end index (inclusive last index to play before loop)
Music_Loop,$7AE2,1,,0,,0,Audio,Music loop index (index to start from when song reaches end)
Sound_Octave,$7AE3,1,,0,,0,Audio,Used for calculating octave
,$7AE4,12,,0,,0,Empty,Unused.
Music_Sq1Bend,$7AF0,1,,0,,0,Hardware Mirror,Alters PAPU_FT1 for bend effects
,$7AF1,3,,0,,0,Empty,Unused.
Music_Sq2Bend,$7AF4,1,,0,,0,Hardware Mirror,Alters PAPU_FT2 for bend effects
,$7AF5,2,,0,,0,Empty,Unused.
Music_RestH_Off,$7AF7,1,,0,,0,Audio,Offset added to Music_RestH_Base; typically $00 or $10 (for low time warning on compatible songs)
,$7AF8,7,,0,,0,Empty,Unused.
PAPU_MODCTL_Copy,$7AFF,1,,0,,0,Hardware Mirror,Current PAPU_MODCTL register
Level_ObjIdxStartByScreen,$7B00,16,,0,,0,Level,"Defines the starting index into Level_Objects for each ""screen"""
Level_ObjectsSpawned,$7B10,48,,0,,0,Level,"When $80 set, object is already spawned, $00 means not"
Level_Objects,$7B40,144,,0,,0,Level,"Object array for current level - 3 bytes per object: ID, Column, Row (C/R of tile grid, multiply by 16 for pixel location)"
,$7BD0,80,,0,,0,Empty,Unused.
Object_BufferX,$7C20,64,,0,,0,Sprites,"For certain objects that require a buffer of X values
Buffer_Occupied determines which of the two buffers is free, if any at all. The object will hold onto it then."
Object_BufferY,$7C60,64,,0,,0,Sprites,"For certain objects that require a buffer of Y values
Buffer_Occupied determines which of the two buffers is free, if any at all. The object will hold onto it then."
ChainChomp_ChainX1,$7CA0,5,,0,,0,Sprites,Chain Link 1 X
ChainChomp_ChainX2,$7CA5,5,,0,,0,Sprites,Chain Link 2 X
ChainChomp_ChainX3,$7CAA,5,,0,,0,Sprites,Chain Link 3 X
ChainChomp_ChainX4,$7CAF,5,,0,,0,Sprites,Chain Link 4 X
ChainChomp_ChainY1,$7CB4,5,,0,,0,Sprites,Chain Link 1 Y
ChainChomp_ChainY2,$7CB9,5,,0,,0,Sprites,Chain Link 2 Y
ChainChomp_ChainY3,$7CBE,5,,0,,0,Sprites,Chain Link 3 Y
ChainChomp_ChainY4,$7CC3,5,,0,,0,Sprites,Chain Link 4 Y
Objects_Var10,$7CC8,5,$7E1CC8,5,,0,Sprites,Generic object variable 10
Objects_Var11,$7CCD,5,$7E1CCD,5,,0,Sprites,Generic object variable 11
Objects_Var12,$7CD2,5,$7E1CD2,5,,0,Sprites,Generic object variable 12
Objects_Var13,$7CD7,5,$7E1CD7,5,,0,Sprites,Generic object variable 13
Objects_Var14,$7CDC,5,$7E1CDC,5,,0,Sprites,Generic object variable 14
PlayerProj_ID,$7CE1,2,,0,,0,Sprites,"Player projectile ID (0 = not in use, 1 = fireball, 2 = hammer, 3+ = Fireball impact ""Poof"")"
PlayerProj_Y,$7CE3,2,,0,,0,Sprites,Player projectile Y
PlayerProj_X,$7CE5,2,,0,,0,Sprites,Player projectile X
PlayerProj_YVel,$7CE7,2,,0,,0,Sprites,"Player projectile Y Velocity (NOTE: Integer, not 4.4FP)"
PlayerProj_XVel,$7CE9,2,,0,,0,Sprites,"Player projectile X Velocity (NOTE: Fireball is integer, 4.4FP for hammer ONLY)"
Fireball_HitChkPass,$7CEB,2,,0,,0,Sprites,"Count of times Player's fireball has gone through hit check; when it hits 2, fireball poofs"
PlayerProj_Cnt,$7CED,2,,0,,0,Sprites,Player projectile counter
Temp_VarNP0,$7CEF,1,,0,,0,Misc.,A temporary not on page 0
Lakitu_Active,$7CF0,1,,0,,0,Sprites,"Set while a Lakitu is active; keeps Lakitu ""alive"" even if off-screen etc."
LevelEvent_Cnt,$7CF1,1,,0,,0,Counter,General purpose counter used by a couple LevelEvents
Vert_Scroll_Off,$7CF2,1,,0,,0,Camera,"Vertical scroll offset, used for ""vibration"" effects"
Level_Vibration,$7CF3,1,,0,,0,Level,"While greater than zero, screen vibrates (from impact of heavy fellow)"
Player_VibeDisable,$7CF4,1,,0,,0,Player,"While greater than zero, Player is unable to move (from impact of heavy fellow)"
Player_TwisterSpin,$7CF5,1,,0,,0,Player,"While greater than zero, Player is twirling from sand twister"
Objects_HitCount,$7CF6,5,,0,,0,Sprites,"Somewhat uncommon ""HP"" used generally for bosses only (e.g. they take so many fireballs)"
RotatingColor_Cnt,$7CFB,1,,0,,0,Palettes,"When non-zero, causes rainbow palettes in the background; $80 bit is used by Koopaling wand grab"
Wand_FrameCnt,$7CFC,1,,0,,0,Counter,A counter that overflows to increment Wand_Frame (added to by the wand's SpecialObj_Var1)
Wand_Frame,$7CFD,1,,0,,0,Sprites,Wand frame
Wand_BounceFlag,$7CFE,1,,0,,0,Sprites,Tracks the recovered wand bounce; odd on first bounce
Player_DebugNoHitFlag,$7CFF,1,,0,,0,Misc.,"UNUSED: (Old debug routine) When set, disables getting hurt (would be toggled by pressing SELECT; see PRG000 $C91B)"
Map_Completions,$7D00,128,,0,,0,Overworld,"Stores ""rows"" of completed levels or other map alterations (e.g. rock break, mini-fortress lock removal, etc.) for a given column, from the leftmost. Rows 1-7 use decending bits from $80, and both row 8 and row 9 use bit $01. Row 8 is prioritized over row 9 should two level panels in these rows share the same column.

Allows a MAX of 4 map screens (64 columns total each player, 16 columns per map screen)
$7D00-$7D3F (Mario), $7D40-$7D7F (Luigi)"
Inventory_Items,$7D80,28,,0,,0,Misc.,"Mario, 4 rows of 7 items"
Inventory_Cards,$7D9C,3,,0,,0,Misc.,"Mario, 3 cards"
Inventory_Score,$7D9F,3,,0,,0,Misc.,"Mario, 3 byte score"
Inventory_Coins,$7DA2,1,,0,,0,Misc.,Mario's coins
Inventory_Items2,$7DA3,28,,0,,0,Misc.,"Luigi, 4 rows of 7 items"
Inventory_Cards2,$7DBF,3,,0,,0,Misc.,"Luigi, 3 cards"
Inventory_Score2,$7DC2,3,,0,,0,Misc.,"Luigi, 3 byte score"
Inventory_Coins2,$7DC5,1,,0,,0,Misc.,Luigi's coins
Map_Unused7DC6,$7DC6,5,,0,,0,Overworld,"Indexed by Map_Unused738, value used in dead routine in PRG011 @ $A2AF"
Map_GameOver_CursorY,$7DCB,1,,0,,0,Overworld,Game Over popup cursor Y ($60/$68)
,$7DCC,9,,0,,0,Empty,Unused.
Map_PrevMoveDir,$7DD5,1,,0,,0,Overworld,Last SUCCESSFUL (allowed) movement direction on map R01 L02 D04 U08
,$7DD6,8,,0,,0,Empty,Unused.
Pal_Data,$7DDE,32,,0,,0,Palettes,"Holds an entire bg/sprite palette (this is the MASTER palette, what fades target, and others may source for ""original"" colors!)"
Level_AltLayout,$7DFE,2,,0,,0,Level,"Pointer to level's ""alternate"" layout (when you go into bonus pipe, etc.)"
Level_AltObjects,$7E00,2,,0,,0,Level,"Pointer to level's ""alternate"" object set (when you go into bonus pipe, etc.)"
Level_BlockGrabHitMem,$7E02,128,,0,,0,Level,"Records coins and 1-ups grabbed, so they don't come back if you switch areas"
Card_ActiveSet,$7E82,18,,0,,0,Bonus Game,Active set of N-Spade game cards
Tile_AttrTable,$7E94,8,,0,,0,Misc.,"In levels, both ""halves"" define the first tile of a quadrant to be solid. The first half is solid at the ground (i.e. Player can stand on it). The second half is solid at the head and walls (i.e. Player bumps head on it, typically ""full solidity"" when combined above)

On the world map, the check follows with a ""less than"", as a quick failure check (if you're in this ""range"" of tiles, but less than that value, you can't possibly be on an enterable tile). The second half is not used on the world map. (TOFIX)"
Level_UnusedSlopesTS5,$7E9C,1,,0,,0,Level,"UNUSED; If set to 2, forces slopes to be enabled for Level_Tileset = 5 (plant infestation)"
PlantInfest_ACnt_Max,$7E9D,1,,0,,0,Level,"Always set to $1A in plant infestation levels, sets max value for animation counter"
,$7E9E,24,,0,,0,Empty,Unused.
LevelJctBQ_Flag,$7EB6,1,,0,,0,Flag,"Set to '1' while in a Big Question block area, locks horizontal scrolling"
Level_JctBackupTileset,$7EB7,1,,0,,0,Level,Level Junction tileset backup
Level_AltTileset,$7EB8,1,,0,,0,Level,"Level's ""alternate"" tileset (when you go into bonus pipe, etc.)"
Level_LayPtrOrig_AddrL,$7EB9,1,,0,,0,Level,ORIGINAL Low byte of address to tile layout
Level_LayPtrOrig_AddrH,$7EBA,1,,0,,0,Level,ORIGINAL High byte of address to tile layout
Level_ObjPtrOrig_AddrL,$7EBB,1,,0,,0,Level,ORIGINAL Low byte of address to object set
Level_ObjPtrOrig_AddrH,$7EBC,1,,0,,0,Level,ORIGINAL High byte of address to object set
Level_BG_Page1_2,$7EBD,1,,0,,0,Graphics,Sets which bank the first and second page (2K / 64 8x8 tiles) of BG is using (see Level_BG_Pages1/2)
Map_BorderAttrFromTiles,$7EBE,44,,0,,0,Overworld,Attributes collected from map tiles that get overwritten by border FIXME SIZE UNCERTAIN (TOFIX)
Map_Unused7EEA,$7EEA,1,,0,,0,Overworld,"Value retrieved from LUT at initialization of world, but never used otherwise"
Map_Objects_Y,$7EEB,14,,0,,0,Overworld,Y coordinate of all map objects
Map_Objects_XLo,$7EF9,14,,0,,0,Misc.,X coordinate lo byte of all map objects
Map_Objects_XHi,$7F07,14,,0,,0,Misc.,X coordinate hi byte of all map objects
Map_Objects_IDs,$7F15,14,,0,,0,Overworld,ID of all 8 map objects (TOFIX)
Map_SprRAMOffDistr,$7F23,1,,0,,0,Counter,A free running counter on the map only which distributes Sprite_RAM offsets to ensure visibility
Map_2PVsGame,$7F24,1,,0,,0,Overworld,"Sets which ""style"" of 2P Vs game will be played"
,$7F25,8,,0,,0,Empty,Unused.
Map_Airship_Dest,$7F2D,1,,0,,0,Overworld,"Airship travel destination; 6 X/Y map coordinates defined per world, after that it just sits still"
THouse_OpenByID,$7F2E,16,,0,,0,Level,UNUSED would keep track of chests opened for a given Toad House ID (THouse_ID)
StatusBar_PMT,$7F3E,8,,0,,0,Misc.,Tiles that currently make up the power meter >>>>>>[P]
StatusBar_CoinH,$7F46,1,,0,,0,Misc.,Status bar tile for coin MSD
StatusBar_CoinL,$7F47,1,,0,,0,Misc.,Status bar tile for coin LSD
StatusBar_LivesH,$7F48,1,,0,,0,Misc.,Status bar tile for lives MSD
StatusBar_LivesL,$7F49,1,,0,,0,Misc.,Status bar tile for lives LSD
StatusBar_Score,$7F4A,6,,0,,0,Misc.,Status bar tiles for score
StatusBar_Time,$7F50,3,,0,,0,Misc.,Status bar tiles for time remaining
Map_MusicBox_Cnt,$7F53,1,,0,,0,Overworld,Number of turns remaining until hammer brothers wake up (>= 1 and they're be asleep on the map)
Level_JctYLHStart,$7F54,16,,0,,0,Level,Array of Y / YHi starts (TOFIX)
Level_JctXLHStart,$7F64,16,,0,,0,Level,Array of X / XHi starts (TOFIX)
Object_TileFeet2,$7F74,1,,0,,0,Sprites,? Difference against Object_TileFeet?
Object_TileWall2,$7F75,1,,0,,0,Sprites,? Difference against Object_TileWall?
ObjTile_DetYHi,$7F76,1,,0,,0,Sprites,Object tile detect Y Hi
ObjTile_DetYLo,$7F77,1,,0,,0,Sprites,Object tile detect Y Lo
ObjTile_DetXHi,$7F78,1,,0,,0,Sprites,Object tile detect X Hi
ObjTile_DetXLo,$7F79,1,,0,,0,Sprites,Object tile detect X Lo
Bubble_Cnt,$7F7A,3,,0,,0,Counter,Bubble counter value (0 = no bubble)
WatrHit_IsSetFlag,$7F7D,1,,0,,0,Flag,"Set when Object_WatrHit* values are stored (but never cleared, so only once!)"
Bubble_YHi,$7F7E,3,,0,,0,Sprites,Water Bubble Y Hi
Object_WatrHitYHi,$7F81,1,,0,,0,Sprites,Y Hi of object that just hit water
Bubble_Y,$7F82,3,,0,,0,Sprites,Water Bubble Y
Object_WatrHitY,$7F85,1,,0,,0,Sprites,Y of object that just hit water
Bubble_XHi,$7F86,3,,0,,0,Sprites,Water Bubble X Hi
Object_WatrHitXHi,$7F89,1,,0,,0,Sprites,X Hi of object that just hit water
Bubble_X,$7F8A,3,,0,,0,Sprites,Water Bubble X
Object_WatrHitX,$7F8D,1,,0,,0,Sprites,X of object that just hit water
Splash_Counter,$7F8E,3,,0,,0,Sprites,Water splash counter
Splash_Y,$7F91,3,,0,,0,Sprites,Water splash X (TOFIX)
Splash_X,$7F94,3,,0,,0,Sprites,Water splash Y (TOFIX)
Splash_NoScrollY,$7F97,3,,0,,0,Sprites,"If set, flags this water splash to not display sprite Y as relative to screen scroll"
BrickBust_En,$7F9A,3,,0,,0,Sprites,"Brick bust ""Enable"" (0 = disable, 2 = brick debris, anything else = ""poof"" away)"
BrickBust_YUpr,$7F9D,3,,0,,0,Sprites,Brick bust upper chunks Y
BrickBust_X,$7FA0,3,,0,,0,Sprites,Brick bust base X
BrickBust_YVel,$7FA3,3,,0,,0,Sprites,Brick bust Y velocity
BrickBust_XDist,$7FA6,3,,0,,0,Sprites,Brick bust X split
BrickBust_YLwr,$7FA9,3,,0,,0,Sprites,Brick bust lower chunks Y
BrickBust_HEn,$7FAC,3,,0,,0,Sprites,"Bits to hide chunks (Bit 0 = Right, 1 = Left, 2 = Lower, 3 = Upper) OR poof counter"
,$7FAF,3,,0,,0,Empty,Unused.
CoinPUp_State,$7FB2,4,,0,,0,Sprites,"State of up to 4 ""Power Up"" coins (i.e. coins that come out of ? blocks and bricks)"
CoinPUp_Y,$7FB6,4,,0,,0,Sprites,"Y of ""Power Up"" coins"
CoinPUp_X,$7FBA,4,,0,,0,Sprites,"X of ""Power Up"" coins"
CoinPUp_YVel,$7FBE,4,,0,,0,Sprites,"Y velocity of ""Power Up"" coins"
CoinPUp_Counter,$7FC2,4,,0,,0,Sprites,"Counter used by ""Power Up"" coins"
SpecialObj_ID,$7FC6,8,,0,,0,Sprites,Special object spawn event IDs (TOFIX)
,$7FCE,2,,0,,0,Empty,Unused.
Objects_Var3,$7FD0,5,,0,,0,Sprites,Generic variable 3 for objects SLOT 0 - 4 ONLY
SpecialObj_YHi,$7FD5,8,,0,,0,Sprites,Special object Y high coordinate
,$7FDD,2,,0,,0,Empty,Unused.
Objects_LastTile,$7FDF,8,,0,,0,Sprites,Last tile this object detected
Objects_SprAttr,$7FE7,8,,0,,0,Sprites,Object sprite attributes (only uses bit 6 for H-Flip and bits 0-1 for palette)
Objects_UseShortHTest,$7FEF,8,,0,,0,Sprites,"If set, object will use a short horizontal test to determine if it is off-screen"
Roulette_Lives,$7FF7,1,,0,,0,Bonus Game,Number of lives you are rewarded from winning the Roulette (NOTE: Shared with first byte of Objects_IsGiant)
Objects_IsGiant,$7FF7,8,,0,,0,Sprites,"Set mainly for World 4 ""Giant"" enemies (but some others, like Bowser, also use it)"
,$7FFF,1,,0,,0,Empty,Unused.
